{"version":3,"sources":["assets/img/basis-cash-logo.svg","assets/img/basis-share-logo.svg","assets/img/farmer.png","assets/img/basis-bond-logo.svg","assets/img/ycrv.png","assets/img/DAI.png","assets/img/sUSD.png","assets/img/USDC.png","assets/img/USDT.png","contexts/Banks/context.ts","basis-cash/config.ts","basis-cash/ether-utils.ts","basis-cash/ERC20.ts","basis-cash/BasisCash.ts","config.ts","contexts/BasisCashProvider/BasisCashProvider.tsx","hooks/useBasisCash.ts","contexts/Banks/Banks.tsx","contexts/Modals/Modals.tsx","components/Footer/components/Nav.tsx","components/Footer/Footer.tsx","components/Container/Container.tsx","components/Logo/Logo.tsx","hooks/useModal.ts","components/Button/Button.tsx","hooks/useTokenBalance.ts","utils/formatBalance.ts","components/Label/Label.tsx","components/Card/Card.tsx","components/CardContent/CardContent.tsx","components/Modal/Modal.tsx","components/ModalTitle/ModalTitle.tsx","components/TokenSymbol/TokenSymbol.tsx","components/TopBar/components/AccountModal.tsx","components/TopBar/components/AccountButton.tsx","components/TopBar/components/Nav.tsx","state/transactions/actions.ts","state/transactions/hooks.tsx","components/MiniLoader/index.tsx","components/Row/index.tsx","components/TopBar/components/Transaction.tsx","components/ModalActions/ModalActions.tsx","components/TopBar/components/TxModal.tsx","components/TopBar/components/TxButton.tsx","components/TopBar/TopBar.tsx","components/Page/Page.tsx","components/PageHeader/PageHeader.tsx","components/Spacer/Spacer.tsx","components/CardIcon/CardIcon.tsx","components/Value/Value.tsx","hooks/useEarnings.ts","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","hooks/useApprove.ts","hooks/useAllowance.ts","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useWithdraw.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","components/Loader/Loader.tsx","hooks/useBanks.ts","views/Banks/BankCards.tsx","views/Banks/Banks.tsx","views/Home/components/HomeCard.tsx","views/Home/Home.tsx","views/Bond/components/ExchangeModal.tsx","views/Bond/components/ExchangeCard.tsx","hooks/token/useBondStats.ts","views/Bond/Bond.tsx","state/transactions/reducer.ts","state/application/actions.ts","state/application/reducer.ts","state/index.ts","theme/colors.ts","theme/index.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","hooks/useDebounce.ts","state/transactions/updater.tsx","state/application/hooks.ts","state/Updaters.tsx","hooks/useStakedBalanceOnBoardroom.ts","hooks/useHarvestFromBoardroom.ts","views/Boardroom/components/Harvest.tsx","views/Boardroom/components/DepositModal.tsx","views/Boardroom/components/WithdrawModal.tsx","hooks/useStakeToBoardroom.ts","hooks/useWithdrawFromBoardroom.ts","views/Boardroom/components/Stake.tsx","views/Boardroom/Boardroom.tsx","components/Column/index.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","context","createContext","banks","defaultEthereumConfig","testing","autoGasMultiplier","defaultConfirmations","defaultGas","defaultGasPrice","ethereumNodeTimeout","decimalToBalance","d","parseUnits","String","ERC20","address","provider","symbol","decimal","contract","this","Contract","ABI","signerOrProvider","totalSupply","account","balanceOf","recipient","amount","transfer","owner","spender","allowance","approve","sender","transferFro","balance","formatUnits","supply","Number","toFixed","estimateGas","name","type","anonymous","inputs","indexed","internalType","constant","outputs","payable","stateMutability","BasisCash","cfg","myAccount","signer","config","contracts","externalTokens","BAC","BAS","BAB","defaultProvider","deployments","ethers","providers","Web3Provider","endpoint","ethConfig","Object","assign","includes","Web3","WebsocketProvider","HttpProvider","timeout","web3ProviderFrom","entries","deployment","abi","Cash","Share","Bond","getSigner","connect","tokens","values","console","log","getTokenPrice","displayedTotalSupply","priceInDAI","cashPrice","toPrecision","tokenContract","chainId","DAI","dai","Token","token","Fetcher","fetchPairData","daiToToken","Route","midPrice","toSignificant","error","Treasury","buyBonds","redeemBonds","poolName","pool","earned","stack","BigNumber","from","stake","withdraw","getReward","exit","Boardroom","getBoardSeatBalance","claimDividends","configurations","development","ChainId","ROPSTEN","etherscanUrl","require","YFI","SUSD","USDC","USDT","production","bankDefinitions","BACDAIPool","depositTokenName","earnTokenName","sort","BACUSDCPool","BACSUSDPool","BACUSDTPool","BACyCRVPool","DAIBACLPTokenSharePool","DAIBASLPTokenSharePool","Context","basisCash","BasisCashProvider","children","useWallet","ethereum","useState","setBasisCash","useEffect","unlockWallet","basis","Provider","value","useBasisCash","useContext","Banks","setBanks","fetchPools","useCallback","a","bankInfo","push","depositToken","earnToken","b","catch","err","onPresent","onDismiss","StyledModalWrapper","styled","div","StyledModalBackdrop","Modals","isOpen","setIsOpen","content","setContent","handlePresent","modalContent","handleDismiss","undefined","onClick","React","isValidElement","cloneElement","StyledNav","nav","StyledLink","props","theme","color","grey","spacing","Nav","href","StyledFooter","footer","StyledFooterInner","topBarSize","siteWidth","Footer","StyledContainer","width","Container","size","ThemeContext","StyledLogo","StyledText","span","Logo","src","farmer","height","style","marginTop","useModal","modal","StyledButton","button","boxShadow","disabled","fontSize","padding","Link","StyledExternalLink","Button","buttonColor","buttonSize","buttonPadding","text","to","variant","teal","primary","main","ButtonChild","useMemo","target","useTokenBalance","setBalance","fetchBalance","refreshInterval","setInterval","clearInterval","getDisplayBalance","decimals","displayBalance","pow","toString","getFullDisplayBalance","StyledLabel","Label","labelColor","customColor","secondary","StyledCard","Card","StyledCardContent","CardContent","StyledModal","Modal","StyledModalTitle","ModalTitle","logosBySymbol","bacLogo","babLogo","basLogo","yCRVLogo","DAILogo","sUSDLogo","USDCLogo","USDTLogo","TokenSymbol","Error","alt","StyledSpacer","StyledValue","StyledBalance","Balances","StyledBalanceWrapper","AccountModal","bacBalance","displayBacBalance","basBalance","displayBasBalance","babBalance","displayBabBalance","StyledAccountButton","AccountButton","onPresentAccountModal","NavLink","exact","activeClassName","addTransaction","createAction","clearAllTransactions","finalizeTransaction","checkedTransaction","useTransactionAdder","dispatch","useDispatch","response","summary","approval","hash","useAllTransactions","state","useSelector","transactions","isTransactionRecent","tx","Date","getTime","addedTime","rotate","keyframes","StyledSVG","svg","stroke","primary1","MiniLoader","rest","viewBox","fill","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","Row","align","border","borderRadius","AutoRow","gap","justify","RowFixed","TransactionWrapper","TransactionStatusText","TransactionState","IconWrapper","pending","success","green1","red1","Transaction","receipt","status","StyledModalActions","StyledModalAction","ModalActions","l","Children","toArray","length","map","child","i","StyledTransactionList","TxModal","confirmed","key","newTransactionsFirst","StyledTxButton","TxButton","allTransactions","sortedRecentTransactions","filter","onPresentTransactionModal","StyledTopBar","StyledTopBarInner","TopBar","flex","display","justifyContent","StyledPage","StyledMain","Page","StyledPageHeader","StyledIcon","StyledTitle","h1","StyledSubtitle","h3","PageHeader","icon","subtitle","title","Spacer","s","StyledCardIcon","white","CardIcon","Value","useEarnings","earnedFromBank","useHarvest","bank","onReward","StyledCardHeader","StyledCardActions","StyledCardContentInner","Harvest","earnings","tokenName","Icon","AddIcon","themeColor","RemoveIcon","ApprovalState","IconButton","useAllowance","setAllowance","fetchAllowance","APPROVE_AMOUNT","constants","MaxUint256","useApprove","currentAllowance","pendingApproval","tokenAddress","keys","some","useHasPendingApproval","approvalState","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","useStake","onStake","useStakedBalance","stakedBalanceOnBank","useWithdraw","onWithdraw","unstake","result","StyledInputWrapper","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","TokenInput","max","onSelectMax","toLocaleString","DepositModal","onConfirm","val","setVal","fullBalance","handleChange","e","currentTarget","handleSelectMax","WithdrawModal","StyledActionSpacer","Stake","approveStatus","tokenBalance","stakedBalance","onPresentDeposit","onPresentWithdraw","useBank","contractName","BanksContext","find","useRedeem","onRedeem","BankNotFound","Center","UnlockWallet","StyledBank","StyledCardsWrapper","StyledCardWrapper","Bank","window","scrollTo","bankId","useParams","StyledLoader","Loader","useBanks","BankCard","StyledCardSuperAccent","StyledCardAccent","StyledContent","StyledDetails","StyledDetail","toUpperCase","StyledCards","StyledLoadingWrapper","StyledRow","h4","BankCards","finishedFirstRow","rows","reduce","bankRows","newBankRows","bankRow","j","Fragment","path","useRouteMatch","Wrapper","CardHeader","h2","CardSection","ValueSkeletonPadding","ValueSkeleton","highlightColor","HomeCard","p","stat","CardWrapper","Home","cash","bond","share","setStats","fetchStats","Promise","all","getCashStat","getBondStat","getShareStat","ExchangeModal","description","action","StyledCardTitle","StyledExchanger","StyledExchangeArrow","StyledToken","StyledDesc","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","faArrowRight","useBondStats","setStat","fetchBondPrice","StyledBond","bondStat","handleBuyBonds","bondAmount","handleRedeemBonds","alignItems","now","createReducer","builder","addCase","payload","txs","blockNumber","lastCheckedBlockNumber","Math","confirmedTime","updateBlockNumber","toggleWalletModal","toggleSettingsMenu","addPopup","removePopup","popupList","walletModalOpen","settingsMenuOpen","removeAfterMs","popup","concat","nanoid","show","forEach","PERSISTED_KEYS","store","configureStore","reducer","application","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","200","black","100","300","400","500","600","700","800","900","light","1","2","3","4","5","6","7","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","Updater","windowVisible","focused","setFocused","listener","addEventListener","removeEventListener","useIsWindowVisible","setState","blockNumberCallback","getBlockNumber","then","on","removeListener","debouncedState","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","lastBlockNumber","useBlockNumber","useAddPopup","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","contractAddress","transactionHash","transactionIndex","txn","Updaters","useStakedBalanceOnBoardroom","getStakedSharesOnBoardroom","useHarvestFromBoardroom","harvestCashFromBoardroom","gt","eq","useStakeToBoardroom","stakeShareToBoardroom","useWithdrawFromBoardroom","withdrawShareFromBoardroom","StyledBoardroom","Column","AutoColumn","RowNoFlex","TransactionPopup","paddingRight","StyledPopupDesc","slice","StyledClose","X","Popup","Fader","AnimatedFader","animated","PopupItem","popKey","useRemovePopup","removeThisPopup","popupContent","faderStyle","useSpring","duration","text2","MobilePopupWrapper","MobilePopupInner","FixedPopupColumn","Popups","activePopups","list","item","useActivePopups","reverse","Providers","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,qznECA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,uZCW5BC,EAJCC,wBAA4B,CAC1CC,MAAO,K,gECaIC,EAAwB,CACnCC,SAAS,EACTC,kBAAmB,IACnBC,qBAAsB,EACtBC,WAAY,UACZC,gBAAiB,gBACjBC,oBAAqB,K,SCNhB,SAASC,EAAiBC,GAC/B,OAAOC,qBAAWC,OAAOF,I,IC4CZG,E,WArDb,WAAYC,EAAiBC,EAA6BC,GAA+B,IAAfC,EAAc,uDAAJ,GAAI,yBANhFC,cAMgF,OAJxFJ,aAIwF,OAHxFE,YAGwF,OAFxFC,aAEwF,EACtFE,KAAKD,SAAW,IAAIE,WAASN,EAASO,EAAKN,GAC3CI,KAAKL,QAAUA,EACfK,KAAKH,OAASA,EACdG,KAAKF,QAAUA,E,oDAGTK,GACNH,KAAKD,SAAW,IAAIE,WAASD,KAAKL,QAASO,EAAKC,K,oCAQhD,OAAOH,KAAKD,SAASK,gB,gCAGbC,GACR,OAAOL,KAAKD,SAASO,UAAUD,K,+BAGxBE,EAAmBC,GAC1B,OAAOR,KAAKD,SAASU,SAASF,EAAWC,K,gCAGjCE,EAAeC,GACvB,OAAOX,KAAKD,SAASa,UAAUF,EAAOC,K,8BAGhCA,EAAiBH,GACvB,OAAOR,KAAKD,SAASc,QAAQF,EAASH,K,mCAItCM,EACAP,EACAC,GAEA,OAAOR,KAAKD,SAASgB,YAAaD,EAAQP,EAAWC,K,kFAG9BH,G,uFACDL,KAAKM,UAAUD,G,cAA/BW,E,yBACCC,sBAAYD,EAAShB,KAAKF,U,oRAIZE,KAAKI,c,cAApBc,E,yBACCC,OAAOF,sBAAYC,EAAQlB,KAAKF,UAAUsB,QAAQ,I,wIAtCzD,OAAOpB,KAAKD,SAASsB,gB,KA2CnBnB,EAAM,CACV,CACEoB,KAAM,WACNC,KAAM,QACNC,WAAW,EACXC,OAAQ,CACN,CAAEC,SAAS,EAAMC,aAAc,UAAWL,KAAM,QAASC,KAAM,WAC/D,CAAEG,SAAS,EAAMC,aAAc,UAAWL,KAAM,UAAWC,KAAM,WACjE,CAAEG,SAAS,EAAOC,aAAc,UAAWL,KAAM,QAASC,KAAM,aAGpE,CACEC,WAAW,EACXC,OAAQ,CACN,CAAEC,SAAS,EAAMC,aAAc,UAAWL,KAAM,OAAQC,KAAM,WAC9D,CAAEG,SAAS,EAAMC,aAAc,UAAWL,KAAM,KAAMC,KAAM,WAC5D,CAAEG,SAAS,EAAOC,aAAc,UAAWL,KAAM,QAASC,KAAM,YAElED,KAAM,WACNC,KAAM,SAER,CACEK,UAAU,EACVH,OAAQ,GACRH,KAAM,cACNO,QAAS,CAAC,CAAEF,aAAc,UAAWL,KAAM,GAAIC,KAAM,YACrDO,SAAS,EACTC,gBAAiB,OACjBR,KAAM,YAER,CACEK,UAAU,EACVH,OAAQ,CAAC,CAAEE,aAAc,UAAWL,KAAM,UAAWC,KAAM,YAC3DD,KAAM,YACNO,QAAS,CAAC,CAAEF,aAAc,UAAWL,KAAM,GAAIC,KAAM,YACrDO,SAAS,EACTC,gBAAiB,OACjBR,KAAM,YAER,CACEK,UAAU,EACVH,OAAQ,CACN,CAAEE,aAAc,UAAWL,KAAM,YAAaC,KAAM,WACpD,CAAEI,aAAc,UAAWL,KAAM,SAAUC,KAAM,YAEnDD,KAAM,WACNO,QAAS,CAAC,CAAEF,aAAc,OAAQL,KAAM,GAAIC,KAAM,SAClDO,SAAS,EACTC,gBAAiB,aACjBR,KAAM,YAER,CACEK,UAAU,EACVH,OAAQ,CACN,CAAEE,aAAc,UAAWL,KAAM,QAASC,KAAM,WAChD,CAAEI,aAAc,UAAWL,KAAM,UAAWC,KAAM,YAEpDD,KAAM,YACNO,QAAS,CAAC,CAAEF,aAAc,UAAWL,KAAM,GAAIC,KAAM,YACrDO,SAAS,EACTC,gBAAiB,OACjBR,KAAM,YAER,CACEK,UAAU,EACVH,OAAQ,CACN,CAAEE,aAAc,UAAWL,KAAM,UAAWC,KAAM,WAClD,CAAEI,aAAc,UAAWL,KAAM,SAAUC,KAAM,YAEnDD,KAAM,UACNO,QAAS,CAAC,CAAEF,aAAc,OAAQL,KAAM,GAAIC,KAAM,SAClDO,SAAS,EACTC,gBAAiB,aACjBR,KAAM,YAER,CACEK,UAAU,EACVH,OAAQ,CACN,CAAEE,aAAc,UAAWL,KAAM,SAAUC,KAAM,WACjD,CAAEI,aAAc,UAAWL,KAAM,YAAaC,KAAM,WACpD,CAAEI,aAAc,UAAWL,KAAM,SAAUC,KAAM,YAEnDD,KAAM,eACNO,QAAS,CAAC,CAAEF,aAAc,OAAQL,KAAM,GAAIC,KAAM,SAClDO,SAAS,EACTC,gBAAiB,aACjBR,KAAM,aC9IGS,EAAb,WAYE,WAAYC,GAAqB,yBAXjCC,eAWgC,OAVhCtC,cAUgC,OAThCuC,YASgC,OARhCC,YAQgC,OAPhCC,eAOgC,OANhCC,oBAMgC,OAJhCC,SAIgC,OAHhCC,SAGgC,OAFhCC,SAEgC,MACtBC,EAAiDT,EAAjDS,gBAAiBC,EAAgCV,EAAhCU,YAAaL,EAAmBL,EAAnBK,eAChC1C,EAAW,IAAIgD,SAAOC,UAAUC,aFrBnC,SAA0BC,EAAkBX,GACjD,IAAMY,EAAYC,OAAOC,OAAOnE,EAAuBqD,GAAU,IAMjE,OAAO,IAJeW,EAASI,SAAS,OACpCC,IAAKP,UAAUQ,kBACfD,IAAKP,UAAUS,cAEMP,EAAU,CACjCQ,QAASP,EAAU3D,sBEagCmE,CAAiBd,IAGpE1C,KAAKqC,UAAY,GACjB,cAAiCY,OAAOQ,QAAQd,GAAhD,eAA8D,CAAC,IAAD,sBAAlDrB,EAAkD,KAA5CoC,EAA4C,KAC5D1D,KAAKqC,UAAUf,GAAQ,IAAIrB,WAASyD,EAAW/D,QAAS+D,EAAWC,IAAK/D,GAE1EI,KAAKsC,eAAiB,GACtB,cAA2CW,OAAOQ,QAAQnB,GAA1D,eAA2E,CAAC,IAAD,sBAA/DzC,EAA+D,2BAAtDF,EAAsD,KAA7CG,EAA6C,KACzEE,KAAKsC,eAAezC,GAAU,IAAIH,EAAMC,EAASC,EAAUC,EAAQC,GAErEE,KAAKuC,IAAM,IAAI7C,EAAMiD,EAAYiB,KAAKjE,QAASC,EAAU,OACzDI,KAAKwC,IAAM,IAAI9C,EAAMiD,EAAYkB,MAAMlE,QAASC,EAAU,OAC1DI,KAAKyC,IAAM,IAAI/C,EAAMiD,EAAYmB,KAAKnE,QAASC,EAAU,OAEzDI,KAAKoC,OAASH,EACdjC,KAAKJ,SAAWA,EA9BpB,yDAqCeA,EAAeS,GAC1BL,KAAKJ,SAAW,IAAIgD,SAAOC,UAAUC,aAAalD,GAClDI,KAAKmC,OAASnC,KAAKJ,SAASmE,UAAU,GACtC/D,KAAKkC,UAAY7B,EACjB,cAA+B4C,OAAOQ,QAAQzD,KAAKqC,WAAnD,eAA+D,CAAC,IAAD,sBAAnDf,EAAmD,KAA7CvB,EAA6C,KAC7DC,KAAKqC,UAAUf,GAAQvB,EAASiE,QAAQhE,KAAKmC,QAE/C,IAP2C,EAOrC8B,EAAM,CAAIjE,KAAKuC,IAAKvC,KAAKwC,IAAKxC,KAAKyC,KAA7B,mBAAqCQ,OAAOiB,OAAOlE,KAAKsC,kBAPzB,cAQvB2B,GARuB,IAQ3C,2BAA4B,SACpBD,QAAQhE,KAAKmC,SATsB,8BAW3CgC,QAAQC,IAAR,oDAA+C/D,EAA/C,QAhDJ,8JAyDwBL,KAAKqE,cAAcrE,KAAKuC,KAzDhD,mCA0DyBvC,KAAKuC,IAAI+B,uBA1DlC,6CAyDMC,WAzDN,KA0DMnE,YA1DN,6QA+DsBe,OA/DtB,SA+DmCnB,KAAKqE,cAAcrE,KAAKuC,KA/D3D,0BA+DUiC,GA/DV,mBAiEkB,SAACA,EAAa,GAAGC,YAAY,GAjE/C,SAkEyBzE,KAAKyC,IAAI6B,uBAlElC,6CAiEMC,WAjEN,KAkEMnE,YAlEN,6QAwEwBJ,KAAKqE,cAAcrE,KAAKwC,KAxEhD,mCAyEyBxC,KAAKwC,IAAI8B,uBAzElC,6CAwEMC,WAxEN,KAyEMnE,YAzEN,0LA6EsBsE,GA7EtB,wFA8EYC,EAAY3E,KAAKoC,OAAjBuC,QACAC,EAAQ5E,KAAKoC,OAAOE,eAApBsC,IAEFC,EAAM,IAAIC,IAAMH,EAASC,EAAI,GAAI,IACjCG,EAAQ,IAAID,IAAMH,EAASD,EAAc/E,QAAS,IAlF5D,kBAqF+BqF,IAAQC,cAAcJ,EAAKE,EAAO/E,KAAKJ,UArFtE,cAqFYsF,EArFZ,OAsFYX,EAAa,IAAIY,IAAM,CAACD,GAAaH,GAtFjD,kBAuFaR,EAAWa,SAASC,cAAc,IAvF/C,kCAyFMlB,QAAQmB,MAAR,yCAAgDZ,EAAc7E,OAA9D,oBAzFN,yLAiGiBW,GAjGjB,8EAkGY+E,EAAavF,KAAKqC,UAAlBkD,SAlGZ,SAmGiBA,EAASC,SAASlG,EAAiBkB,IAnGpD,0NA0GoBA,GA1GpB,8EA2GY+E,EAAavF,KAAKqC,UAAlBkD,SA3GZ,SA4GiBA,EAASE,YAAYnG,EAAiBkB,IA5GvD,6NA+GuBkF,GA/GvB,4FA+G+CrF,EA/G/C,+BA+GyDL,KAAKkC,UACpDyD,EAAO3F,KAAKqC,UAAUqD,GAhHhC,kBAkHmBC,EAAKC,OAAOvF,GAlH/B,+EAoHM8D,QAAQmB,MAAR,0CAAiDK,EAAKhG,QAAtD,aAAkE,KAAIkG,QApH5E,kBAqHaC,YAAUC,KAAK,IArH5B,mMAyH4BL,GAzH5B,4FAyHoDrF,EAzHpD,+BAyH8DL,KAAKkC,UACzDyD,EAAO3F,KAAKqC,UAAUqD,GA1HhC,kBA4HmBC,EAAKrF,UAAUD,GA5HlC,+EA8HM8D,QAAQmB,MAAR,6CAAoDK,EAAKhG,QAAzD,aAAqE,KAAIkG,QA9H/E,kBA+HaC,YAAUC,KAAK,IA/H5B,qLAyIcL,EAAwBlF,GAzItC,8EA0IUmF,EAAO3F,KAAKqC,UAAUqD,GA1IhC,SA2IiBC,EAAKK,MAAM1G,EAAiBkB,IA3I7C,wNAoJgBkF,EAAwBlF,GApJxC,8EAqJUmF,EAAO3F,KAAKqC,UAAUqD,GArJhC,SAsJiBC,EAAKM,SAAS3G,EAAiBkB,IAtJhD,wNA4JgBkF,GA5JhB,8EA6JUC,EAAO3F,KAAKqC,UAAUqD,GA7JhC,SA8JiBC,EAAKO,YA9JtB,mNAoKaR,GApKb,8EAqKUC,EAAO3F,KAAKqC,UAAUqD,GArKhC,SAsKiBC,EAAKQ,OAtKtB,oOAyK8B3F,GAzK9B,8EA0KY4F,EAAcpG,KAAKqC,UAAnB+D,UA1KZ,SA2KiBA,EAAUJ,MAAMxF,GA3KjC,yTA+KY4F,EAAcpG,KAAKqC,UAAnB+D,UA/KZ,SAgLiBA,EAAUC,sBAhL3B,wOAmLmC7F,GAnLnC,8EAoLY4F,EAAcpG,KAAKqC,UAAnB+D,UApLZ,SAqLiBA,EAAUH,SAASzF,GArLpC,uTAyLY4F,EAAcpG,KAAKqC,UAAnB+D,UAzLZ,SA0LiBA,EAAUE,iBA1L3B,+SA8LYF,EAAcpG,KAAKqC,UAAnB+D,UA9LZ,SA+LiBA,EAAUD,OA/L3B,+KAoDI,QAASnG,KAAKkC,cApDlB,KCRMqE,EAAiD,CACrDC,YAAa,CACX7B,QAAS8B,IAAQC,QACjBC,aAAc,+BACdjE,gBAAiB,iEACjBC,YAAaiE,EAAQ,KACrBtE,eAAgB,CACdsC,IAAK,CAAC,6CAA8C,IACpDiC,IAAK,CAAC,6CAA8C,IACpDC,KAAM,CAAC,6CAA8C,IACrDC,KAAM,CAAC,6CAA8C,GACrDC,KAAM,CAAC,6CAA8C,GAErD,mBAAoB,CAAC,6CAA8C,IACnE,mBAAoB,CAAC,6CAA8C,MAGvEC,WAAY,CAcRtC,QAAS8B,IAAQC,QACjBC,aAAc,+BACdjE,gBAAiB,iEACjBC,YAAaiE,EAAQ,KACrBtE,eAAgB,CAChBsC,IAAK,CAAC,6CAA8C,IACpDiC,IAAK,CAAC,6CAA8C,IACpDC,KAAM,CAAC,6CAA8C,IACrDC,KAAM,CAAC,6CAA8C,GACrDC,KAAM,CAAC,6CAA8C,GAErD,mBAAoB,CAAC,6CAA8C,IACnE,mBAAoB,CAAC,6CAA8C,OAK5DE,EAAsD,CACjEC,WAAY,CACV7F,KAAM,kBACNvB,SAAU,aACVqH,iBAAkB,MAClBC,cAAe,MACfC,KAAM,GAERC,YAAa,CACXjG,KAAM,mBACNvB,SAAU,cACVqH,iBAAkB,OAClBC,cAAe,MACfC,KAAM,GAERE,YAAa,CACXlG,KAAM,mBACNvB,SAAU,cACVqH,iBAAkB,OAClBC,cAAe,MACfC,KAAM,GAERG,YAAa,CACXnG,KAAM,mBACNvB,SAAU,cACVqH,iBAAkB,OAClBC,cAAe,MACfC,KAAM,GAERI,YAAa,CACXpG,KAAM,mBACNvB,SAAU,cACVqH,iBAAkB,OAClBC,cAAe,MACfC,KAAM,GAERK,uBAAwB,CACtBrG,KAAM,yBACNvB,SAAU,yBACVqH,iBAAkB,mBAClBC,cAAe,MACfC,KAAM,GAERM,uBAAwB,CACtBtG,KAAM,yBACNvB,SAAU,yBACVqH,iBAAkB,mBAClBC,cAAe,MACfC,KAAM,IAIKf,IAAf,WC/FasB,EAAUhJ,wBAAgC,CAAEiJ,UAAW,OAEvDC,EAA8B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC7BC,cAAtBC,EADmD,EACnDA,SAAU7H,EADyC,EACzCA,QADyC,EAEzB8H,qBAFyB,mBAEpDL,EAFoD,KAEzCM,EAFyC,KAiB3D,OAbAC,qBAAU,WACR,GAAKP,EAOMzH,GACTyH,EAAUQ,aAAaJ,EAAU7H,OARnB,CACd,IAAMkI,EAAQ,IAAIvG,EAAUI,GACxB/B,GAEFkI,EAAMD,aAAaJ,EAAU7H,GAE/B+H,EAAaG,MAId,CAAClI,IAEG,kBAACwH,EAAQW,SAAT,CAAkBC,MAAO,CAAEX,cAAcE,ICpBnCU,EALM,WAEnB,OADsBC,qBAAWd,GAAzBC,WC+BKc,EA7BS,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,EACdG,mBAAiB,IADH,mBACjCrJ,EADiC,KAC1B+J,EAD0B,KAElCf,EAAYY,IAEZI,EAAaC,sBAAW,sBAAC,kCAAAC,EAAA,sDAG7B,IAFMlK,EAAgB,GAEtB,MAAuBmE,OAAOiB,OAAOgD,GAArC,eAAW+B,EAA4C,KACrDnK,EAAMoK,KAAN,eACKD,EADL,CAEEtJ,QAASyC,EAAOO,YAAYsG,EAASlJ,UAAUJ,QAC/CwJ,aAAcrB,EAAUxF,eAAe2G,EAAS7B,kBAChDgC,UAAqC,OAA1BH,EAAS5B,cAAyBS,EAAUvF,IAAMuF,EAAUtF,OAG3E1D,EAAMwI,MAAK,SAAC0B,EAAGK,GAAJ,OAAWL,EAAE1B,KAAO+B,EAAE/B,KAAO,GAAK,KAC7CuB,EAAS/J,GAZoB,2CAa5B,CAACgJ,EAAWe,IASf,OAPAR,qBAAU,WACJP,GACFgB,IACGQ,OAAM,SAAAC,GAAG,OAAIpF,QAAQmB,MAAR,iCAAwCiE,EAAI1D,aAE7D,CAACiC,EAAWgB,IAER,kBAAC,EAAQN,SAAT,CAAkBC,MAAO,CAAE3J,UAAUkJ,I,wXCtBvC,IAAMH,EAAUhJ,wBAA6B,CAClD2K,UAAW,aACXC,UAAW,eAqCPC,EAAqBC,IAAOC,IAAV,KAQlBC,EAAsBF,IAAOC,IAAV,KAMVE,EAhDU,SAAC,GAAkB,IAAhB9B,EAAe,EAAfA,SAAe,EACbG,oBAAS,GADI,mBAClC4B,EADkC,KAC1BC,EAD0B,OAEX7B,qBAFW,mBAElC8B,EAFkC,KAEzBC,EAFyB,KAInCC,EAAgBpB,uBAAY,SAACqB,GACjCF,EAAWE,GACXJ,GAAU,KACT,CAACE,EAAYF,IAEVK,EAAgBtB,uBAAY,WAChCmB,OAAWI,GACXN,GAAU,KACT,CAACE,EAAYF,IAEhB,OACE,kBAAC,EAAQxB,SAAT,CAAkBC,MAAO,CACvBwB,UACAF,SACAP,UAAWW,EACXV,UAAWY,IAEVrC,EACA+B,GACC,kBAACL,EAAD,KACE,kBAACG,EAAD,CAAqBU,QAASF,IAC7BG,IAAMC,eAAeR,IAAYO,IAAME,aAAaT,EAAS,CAC5DR,UAAWY,O,qTCtCvB,IAUMM,EAAYhB,IAAOiB,IAAV,KAKTC,EAAalB,IAAOX,EAAV,KACL,SAAA8B,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QACzB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAC5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGnC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAI9BE,EAzBO,WACpB,OACE,kBAACR,EAAD,KACE,kBAACE,EAAD,CAAYO,KAAK,iCAAjB,UACA,kBAACP,EAAD,CAAYO,KAAK,iCAAjB,WACA,kBAACP,EAAD,CAAYO,KAAK,0BAAjB,c,iVCHN,IAQMC,EAAe1B,IAAO2B,OAAV,KAKZC,GAAoB5B,IAAOC,IAAV,KAIX,SAAAkB,GAAK,OAAIA,EAAMC,MAAMS,cAClB,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,aAIrBC,GAtBU,kBACvB,kBAACL,EAAD,KACE,kBAACE,GAAD,KACE,kBAAC,EAAD,S,iLCAN,IAyBMI,GAAkBhC,IAAOC,IAAV,MAGN,SAAAkB,GAAK,OAAIA,EAAMc,SACf,SAAAd,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAI7BW,GAjC6B,SAAC,GAA+B,IAEtED,EAFyC5D,EAA4B,EAA5BA,SAA4B,IAAlB8D,YAAkB,MAAX,KAAW,EACjEL,EAAc9C,qBAAkCoD,KAAhDN,UAER,OAAQK,GACN,IAAK,KACHF,EAAQH,EAAY,EACpB,MACF,IAAK,KACHG,EAAoB,EAAZH,EAAgB,EACxB,MACF,IAAK,KACL,QACEG,EAAQH,EAEZ,OACE,kBAACE,GAAD,CAAiBC,MAAOA,GACrB5D,I,gSCnBP,IASMgE,GAAarC,IAAOC,IAAV,MAKVqC,GAAatC,IAAOuC,KAAV,MACL,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAG1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAG/BiB,GArBQ,WACrB,OACE,kBAACH,GAAD,KACE,yBAAKI,IAAKC,KAAQC,OAAO,KAAKC,MAAO,CAAEC,WAAY,KACnD,kBAACP,GAAD,qBCQSQ,GAbE,SAACC,GAA4B,IAAD,EACV/D,qBAAWd,GAApC4B,EADmC,EACnCA,UAAWD,EADwB,EACxBA,UASnB,MAAO,CAPeT,uBAAY,WAChCS,EAAUkD,KACT,CACDA,EACAlD,IAGqBC,I,g/BCEzB,IA+EMkD,GAAehD,IAAOiD,OAAV,MAEI,SAAA9B,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAGtC,SAAAH,GAAK,OAAIA,EAAM+B,aACpB,SAAA/B,GAAK,OAAKA,EAAMgC,SAAP,UAAmChC,EAAME,MAAzC,MAAkBF,EAAME,SAG7B,SAAAF,GAAK,OAAIA,EAAMiC,YAElB,SAAAjC,GAAK,OAAIA,EAAMgB,QAGT,SAAAhB,GAAK,OAAIA,EAAMkC,WACd,SAAAlC,GAAK,OAAIA,EAAMkC,WACd,SAAAlC,GAAK,OAAKA,EAAMgC,SAAuB,YAAZxC,KAGvB,SAAAQ,GAAK,OAAIA,EAAME,SAC1B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAIvCJ,GAAalB,YAAOsD,IAAPtD,CAAH,MAOF,SAAAmB,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MAC7B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAItCgC,GAAqBvD,IAAOX,EAAV,MAOV,SAAA8B,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MAC7B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAI7BiC,GA/HuB,SAAC,GAShC,IAGDC,EAWAC,EACAC,EACAP,EAxBJ/E,EAQI,EARJA,SACA8E,EAOI,EAPJA,SACA1B,EAMI,EANJA,KACAb,EAKI,EALJA,QACAuB,EAII,EAJJA,KACAyB,EAGI,EAHJA,KACAC,EAEI,EAFJA,GACAC,EACI,EADJA,QACI,EACuB9E,qBAAWoD,KAA9Bf,EADJ,EACIA,MAAOE,EADX,EACWA,QAGf,OAAQuC,GACN,IAAK,YACHL,EAAcpC,EAAM0C,KAAK,KACzB,MACF,IAAK,UACL,QACEN,EAAcpC,EAAM2C,QAAQC,KAOhC,OAAQ9B,GACN,IAAK,KACHwB,EAAgBpC,EAAQ,GACxBmC,EAAa,GACbN,EAAW,GACX,MACF,IAAK,KACHO,EAAgBpC,EAAQ,GACxBmC,EAAa,GACbN,EAAW,GACX,MACF,IAAK,KACL,QACEO,EAAgBpC,EAAQ,GACxBmC,EAAa,GACbN,EAAW,GAGf,IAAMc,EAAcC,mBAAQ,WAC1B,OAAIN,EACK,kBAAC,GAAD,CAAYA,GAAIA,GAAKD,GACnBnC,EACF,kBAAC8B,GAAD,CAAoB9B,KAAMA,EAAM2C,OAAO,WAAWR,GAElDA,IAER,CAACnC,EAAMmC,EAAMC,IAEhB,OACE,kBAACb,GAAD,CACEE,eAlCAA,EAmCA7B,MAAOoC,EACPN,SAAUA,EACVC,SAAUA,EACVxC,QAASA,EACTyC,QAASM,EACTxB,KAAMuB,GAELrF,EACA6F,ICvDQG,GArBS,SAACjJ,GAAkB,IAAD,EACVoD,mBAASrC,YAAUC,KAAK,IADd,mBACjC/E,EADiC,KACxBiN,EADwB,KAEhC5N,EAAY4H,cAAZ5H,QAEF6N,EAAenF,sBAAW,sBAAC,sBAAAC,EAAA,kEAC/BiF,EAD+B,SACdlJ,EAAMzE,UAAUD,GADF,6EAE9B,CAACA,EAAS0E,IAYb,OAVAsD,qBAAU,WACR,GAAIhI,EAAS,CACX6N,IAAe5E,OAAM,SAACC,GAAD,OACnBpF,QAAQmB,MAAR,yCAAgDiE,EAAI1D,WAEtD,IAAIsI,EAAkBC,YAAYF,EAAc,KAChD,OAAO,kBAAMG,cAAcF,OAE5B,CAAC9N,EAAS4N,EAAYlJ,IAElB/D,GCrBIsN,GAAoB,SAACtN,GAAuC,IAAnBuN,EAAkB,uDAAP,GACzDC,EAAiBxN,EAAQ4I,IAAI9D,YAAUC,KAAK,IAAI0I,IAAIF,IAC1D,OAAOC,EAAeE,YAGXC,GAAwB,SAAC3N,GAAuC,IAAnBuN,EAAkB,uDAAP,GACnE,OAAOvN,EAAQ4I,IAAI9D,YAAUC,KAAK,IAAI0I,IAAIF,IAAWG,Y,wFCCvD,IA0BME,GAAcjF,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAME,SAGX6D,GA9BqB,SAAC,GAAyD,IAGxFC,EAHiCvB,EAAsD,EAAtDA,KAAsD,IAAhDE,eAAgD,MAAtC,YAAsC,EAAlBsB,EAAkB,EAAzB/D,MAC1DA,EAAUrC,qBAAWoD,KAArBf,MAgBR,OAbI+D,EACFD,EAAaC,EAEG,YAAZtB,EACFqB,EAAa9D,EAAM2C,QAAQC,KAEN,cAAZH,EACTqB,EAAa9D,EAAMgE,UAAUpB,KAER,WAAZH,IACTqB,EAAa9D,EAAMC,KAAK,MAI1B,kBAAC2D,GAAD,CAAa5D,MAAO8D,GAAavB,I,oPCxBrC,IAMM0B,GAAatF,IAAOC,IAAV,MACM,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAChC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAEpB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAMnDiE,GAhBQ,SAAC,GAAD,IAAGlH,EAAH,EAAGA,SAAH,OACrB,kBAACiH,GAAD,KACGjH,I,qJCFL,IAMMmH,GAAoBxF,IAAOC,IAAV,MAIV,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAG3BkE,GAbe,SAAC,GAAD,IAAGpH,EAAH,EAAGA,SAAH,OAC5B,kBAACmH,GAAD,KACGnH,I,iKCML,IAYMqH,GAAc1F,IAAOC,IAAV,MAEoB,SAACkB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAIxDqE,GAlBS,SAAC,GAAkB,IAAhBtH,EAAe,EAAfA,SACzB,OACE,kBAAC,GAAD,CAAW8D,KAAK,MACd,kBAACuD,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAcrH,O,+OCTxB,IAMMuH,GAAmB5F,IAAOC,IAAV,MAEX,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAI/B,SAAAH,GAAK,OAAIA,EAAMC,MAAMS,cAEjB,SAAAV,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MAG/BsE,GAjB+B,SAAC,GAAD,IAAGjC,EAAH,EAAGA,KAAH,OAC5C,kBAACgC,GAAD,KACGhC,I,wKCECkC,GAA2C,CAC/C,IAAOC,KACP,IAAOC,KACP,IAAOC,KACP,KAAQC,KACR,IAAOC,KACP,KAAQC,KACR,KAAQC,KACR,KAAQC,KACR,mBAAoBP,KACpB,mBAAoBE,MAsBPM,GAd+B,SAAC,GAA2B,IAAzBrQ,EAAwB,EAAxBA,OAAwB,IAAhBiM,YAAgB,MAAT,GAAS,EACvE,IAAK2D,GAAc5P,GACjB,MAAM,IAAIsQ,MAAJ,oCAAuCtQ,IAE/C,OACE,yBACEuM,IAAKqD,GAAc5P,GACnBuQ,IAAG,UAAKvQ,EAAL,SACH+L,MAAOE,EACPQ,OAAQR,K,m8BC1Bd,IAmDMuE,GAAe1G,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAC9B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGlCoF,GAAc3G,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAKrCsF,GAAgB5G,IAAOC,IAAV,MAMb4G,GAAW7G,IAAOC,IAAV,MAIK,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAG1CuF,GAAuB9G,IAAOC,IAAV,MAIZ,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAc5BwF,IAXW/G,IAAOC,IAAV,MAEL,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGlBvB,IAAOC,IAAV,MAGV,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MA1FF,SAAC,GAAkB,EAAhBzB,UAAiB,IACvD3B,EAAYY,IAEZiI,EAAa3C,GAAgBlG,EAAUvF,KACvCqO,EAAoB9C,mBAAQ,kBAAMQ,GAAkBqC,KAAa,CAACA,IAElEE,EAAa7C,GAAgBlG,EAAUtF,KACvCsO,EAAoBhD,mBAAQ,kBAAMQ,GAAkBuC,KAAa,CAACA,IAElEE,EAAa/C,GAAgBlG,EAAUrF,KACvCuO,EAAoBlD,mBAAQ,kBAAMQ,GAAkByC,KAAa,CAACA,IAExE,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYxD,KAAK,cAEjB,kBAACiD,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CAAa5Q,OAAO,QACpB,kBAAC0Q,GAAD,KACE,kBAACD,GAAD,KAAcM,GACd,kBAAC,GAAD,CAAOrD,KAAK,oBAIhB,kBAACkD,GAAD,KACE,kBAAC,GAAD,CAAa5Q,OAAO,QACpB,kBAAC0Q,GAAD,KACE,kBAACD,GAAD,KAAcQ,GACd,kBAAC,GAAD,CAAOvD,KAAK,oBAIhB,kBAACkD,GAAD,KACE,kBAAC,GAAD,CAAa5Q,OAAO,QACpB,kBAAC0Q,GAAD,KACE,kBAACD,GAAD,KAAcU,GACd,kBAAC,GAAD,CAAOzD,KAAK,qBAKlB,kBAAC8C,GAAD,MACA,kBAAC,GAAD,CACEjF,KAAK,GACLmC,KAAK,iB,uEC3Cb,IAwBM0D,GAAsBtH,IAAOC,IAAV,MAEVsH,GA1BqC,SAACpG,GAAW,IAAD,EAC7B2B,GAAS,kBAAC,GAAD,OAAlC0E,EADsD,sBAGhClJ,cAArB5H,EAHqD,EAGrDA,QAAS2D,EAH4C,EAG5CA,QAEjB,OACE,kBAACiN,GAAD,KACI5Q,EAOA,kBAAC,GAAD,CACEkK,QAAS4G,EACTrF,KAAK,KACLyB,KAAK,cATP,kBAAC,GAAD,CACEhD,QAAS,kBAAMvG,EAAQ,aACvB8H,KAAK,KACLyB,KAAK,oB,kXCrBf,IAWM5C,GAAYhB,IAAOiB,IAAV,MAKTC,GAAalB,YAAOyH,IAAPzH,CAAH,MACL,SAAAmB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAEzB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAC5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGnC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAGhC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAM2C,QAAQC,QAIjCzC,GA9BO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYkG,OAAK,EAACC,gBAAgB,SAAS9D,GAAG,KAA9C,QACA,kBAAC,GAAD,CAAY6D,OAAK,EAACC,gBAAgB,SAAS9D,GAAG,SAA9C,QACA,kBAAC,GAAD,CAAY6D,OAAK,EAACC,gBAAgB,SAAS9D,GAAG,UAA9C,SACA,kBAAC,GAAD,CAAY6D,OAAK,EAACC,gBAAgB,SAAS9D,GAAG,cAA9C,e,SCIO+D,GAAiBC,aAM3B,+BAEUC,GAAuBD,aAClC,qCAGWE,GAAsBF,aAIhC,oCAEUG,GAAqBH,aAI/B,mCC1BI,SAASI,KAGL,IAAD,EACqB3J,cAArBtD,EADA,EACAA,QAAStE,EADT,EACSA,QACXwR,EAAWC,cAEjB,OAAO/I,uBACL,SACEgJ,GAKI,IAAD,yDAD6E,GAF9EC,EAGC,EAHDA,QACAC,EAEC,EAFDA,SAGF,GAAK5R,GACAsE,EAAL,CAFG,IAIKuN,EAASH,EAATG,KACR,IAAKA,EACH,MAAM/B,MAAM,8BAEd0B,EAASN,GAAe,CAAEW,OAAMnM,KAAM1F,EAASsE,UAASsN,WAAUD,gBAEpE,CAACH,EAAUlN,EAAStE,IAKjB,SAAS8R,KAAgE,IAAD,EACrExN,EAAYsD,cAAZtD,QACFyN,EAAQC,aAAgD,SAACD,GAAD,OAAWA,EAAME,gBAE/E,OAAO3N,GAAO,UAAGyN,EAAMzN,UAAT,QAA0B,GAenC,SAAS4N,GAAoBC,GAClC,OAAO,IAAIC,MAAOC,UAAYF,EAAGG,UAAY,M,oXCxD/C,IAAMC,GAASC,YAAH,MASNC,GAAYnJ,IAAOoJ,IAAV,KACGH,IACN,qBAAG9G,QACJ,qBAAGA,QAEA,gBAAGkH,EAAH,EAAGA,OAAQjI,EAAX,EAAWA,MAAX,cAAuBiI,QAAvB,IAAuBA,IAAUjI,EAAMkI,YAQtC,SAASC,GAAT,GAOX,IAAD,IANDpH,YAMC,MANM,OAMN,EALDkH,EAKC,EALDA,OACGG,EAIF,kCACD,OACE,kBAACL,GAAD,eACEM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNxH,KAAMA,EACNkH,OAAQA,GACJG,GAEJ,0BACE5T,EAAE,6HACFgU,YAAY,MACZC,cAAc,QACdC,eAAe,W,6sBC5CvB,IAAMC,GAAM/J,IAAOC,IAAV,MAIQ,gBAAG+J,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,YACpC,qBAAG3G,WACJ,qBAAG4G,UACI,qBAAGC,gBAYTC,IATanK,YAAO+J,GAAP/J,CAAH,MAIAA,IAAOC,IAAV,MAKGD,YAAO+J,GAAP/J,CAAH,MAER,gBAAGoK,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGD,QAIJE,GAAWtK,YAAO+J,GAAP/J,CAAH,MAET,gBAAGoK,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,M,yrBCxBpC,IAAMG,GAAqBvK,IAAOC,IAAV,MAKlBuK,GAAwBxK,IAAOC,IAAV,MASrBwK,GAAmBzK,IAAOX,EAAV,MAUX,SAAC8B,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAGvCoJ,GAAc1K,IAAOC,IAAV,MACN,gBAAG0K,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASxJ,EAArB,EAAqBA,MAArB,OACPuJ,EAAUvJ,EAAMkI,SAAWsB,EAAUxJ,EAAMyJ,OAASzJ,EAAM0J,QAqC/CC,GA9BiC,SAAC,GAAY,IAAD,IAATlC,EAAS,EAATA,GAC3CR,EAAUQ,EAAGR,QACbsC,GAAW9B,EAAGmC,QACdJ,GACHD,GAAW9B,IAA8B,KAAvB,UAAAA,EAAGmC,eAAH,eAAYC,SAA8C,qBAA9B,UAAOpC,EAAGmC,eAAV,aAAO,EAAYC,SAEpE,OACE,kBAACV,GAAD,KACE,kBAACE,GAAD,CACEhJ,KAAI,UAAKhJ,EAAOuE,aAAZ,eAA+B6L,EAAGN,MACtCoC,QAASA,EACTC,QAASA,GAET,kBAACN,GAAD,KACE,kBAACE,GAAD,YAAwBnC,QAAxB,IAAwBA,IAAWQ,EAAGN,KAAtC,YAEF,kBAACmC,GAAD,CAAaC,QAASA,EAASC,QAASA,GACrCD,EACC,kBAACpB,GAAD,MACEqB,EACF,kBAAC,KAAD,CAAazI,KAAK,OAElB,kBAAC,KAAD,CAAUA,KAAK,W,kYChE3B,IAgBM+I,GAAqBlL,IAAOC,IAAV,MAEF,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAG1C,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAAQ,SAAAJ,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MAAQ,SAAAJ,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MACtG,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGtC4J,GAAoBnL,IAAOC,IAAV,MAIjByG,GAAe1G,IAAOC,IAAV,MACP,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGzB6J,GAjCgB,SAAC,GAAkB,IAAhB/M,EAAe,EAAfA,SAC1BgN,EAAIxK,IAAMyK,SAASC,QAAQlN,GAAUmN,OAC3C,OACE,kBAACN,GAAD,KACGrK,IAAMyK,SAASG,IAAIpN,GAAU,SAACqN,EAAOC,GAAR,OAC5B,oCACE,kBAACR,GAAD,KACGO,GAEFC,EAAIN,EAAI,GAAK,kBAAC,GAAD,Y,gNCKxB,IA2BM3F,GAAc1F,YAAO2F,GAAP3F,CAAH,MAIX4L,GAAwB5L,IAAOC,IAAV,MAKZ4L,GApCyB,SAAC,GAAuC,IAArClB,EAAoC,EAApCA,QAASmB,EAA2B,EAA3BA,UAAWhM,EAAgB,EAAhBA,UAC7D,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY8D,KAAK,kBACT,OAAP+G,QAAO,IAAPA,OAAA,EAAAA,EAASa,QAAS,GACjB,oCACE,kBAAC,GAAD,CAAO5H,KAAK,yBACZ,kBAACgI,GAAD,KACGjB,EAAQc,KAAI,SAAA5C,GAAE,OAAI,kBAAC,GAAD,CAAakD,IAAKlD,EAAGN,KAAMM,GAAIA,UAI9C,OAATiD,QAAS,IAATA,OAAA,EAAAA,EAAWN,QAAS,GACnB,oCACE,kBAAC,GAAD,CAAO5H,KAAK,wBACZ,kBAACgI,GAAD,KACGE,EAAUL,KAAI,SAAA5C,GAAE,OAAI,kBAAC,GAAD,CAAakD,IAAKlD,EAAGN,KAAMM,GAAIA,SAI1D,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQjF,KAAK,QAAQhD,QAASd,O,iGC1BtC,SAASkM,GAAqB3M,EAAuBK,GACnD,OAAOA,EAAEsJ,UAAY3J,EAAE2J,UAGzB,IA+BMiD,GAAiBjM,IAAOC,IAAV,MACF,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGlC2K,GAnC2B,WAAO,IACvCxV,EAAY4H,cAAZ5H,QACFyV,EAAkB3D,KAElB4D,EAA2BjI,mBAAQ,WAEvC,OADY7K,OAAOiB,OAAO4R,GACfE,OAAOzD,IAAqBjL,KAAKqO,MAC3C,CAACG,IAEExB,EAAUyB,EAAyBC,QAAO,SAACxD,GAAD,OAASA,EAAGmC,WACtDc,EAAYM,EAAyBC,QAAO,SAACxD,GAAD,OAAQA,EAAGmC,WAVf,EAYVlI,GAClC,kBAAC,GAAD,CAAS6H,QAASA,EAASmB,UAAWA,KADjCQ,EAZuC,oBAe9C,OACE,sCACK5V,GACD,kBAACuV,GAAD,KACE,kBAAC,GAAD,CACE9J,KAAK,KACLyB,KAAM+G,EAAQa,OAAS,EAAjB,UAAwBb,EAAQa,OAAhC,kCACN1H,QAAS6G,EAAQa,OAAS,EAAI,YAAc,UAC5C5K,QAAS,kBAAM0L,U,oRC7B3B,IAuBMC,GAAevM,IAAOC,IAAV,MAEZuM,GAAoBxM,IAAOC,IAAV,MAGX,SAAAkB,GAAK,OAAIA,EAAMC,MAAMS,cAElB,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,aAIrB2K,GAlCU,WACvB,OACE,kBAACF,GAAD,KACE,kBAAC,GAAD,CAAWpK,KAAK,MACd,kBAACqK,GAAD,KACE,yBAAK5J,MAAO,CAAE8J,KAAM,IAClB,kBAAC,GAAD,OAEF,kBAAC,GAAD,MACA,yBAAK9J,MAAO,CACV8J,KAAM,EACNC,QAAS,OACTC,eAAgB,aAEhB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,mRCnBZ,IAUMC,GAAa7M,IAAOC,IAAV,MAEV6M,GAAa9M,IAAOC,IAAV,MAIa,SAAAkB,GAAK,OAA6B,EAAzBA,EAAMC,MAAMS,cAC9B,SAAAV,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGlCwL,GApBQ,SAAC,GAAD,IAAG1O,EAAH,EAAGA,SAAH,OACrB,kBAACwO,GAAD,KACE,kBAAC,GAAD,MACA,kBAACC,GAAD,KACGzO,GAEH,kBAAC,GAAD,Q,qvBCHJ,IAUM2O,GAAmBhN,IAAOC,IAAV,MAIF,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAChC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAMxC0L,GAAajN,IAAOC,IAAV,MAQViN,GAAclN,IAAOmN,GAAV,MACN,SAAAhM,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAOrC8L,GAAiBpN,IAAOqN,GAAV,MACT,SAAAlM,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAQ5BgM,GA9C+B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/D,OACE,kBAACT,GAAD,KACE,kBAACC,GAAD,KAAaM,GACb,kBAACL,GAAD,KAAcO,GACd,kBAACL,GAAD,KAAiBI,K,4GCPvB,IAyBM9G,GAAe1G,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAMgB,QAChB,SAAAhB,GAAK,OAAIA,EAAMgB,QAGXuL,GA9BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBxL,YAAkB,MAAX,KAAW,EACjDZ,EAAYvC,qBAAWoD,KAAvBb,QAGR,OAAQY,GACN,IAAK,KACHwL,EAAIpM,EAAQ,GACZ,MACF,IAAK,KACHoM,EAAIpM,EAAQ,GACZ,MACF,IAAK,KACL,QACEoM,EAAIpM,EAAQ,GAGhB,OACE,kBAAC,GAAD,CAAcY,KAAMwL,K,oVCjBxB,IAMMC,GAAiB5N,IAAOC,IAAV,MACE,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMwM,SAQf,SAAA1M,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QACvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QACxC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGjCuM,GApB2B,SAAC,GAAD,IAAGzP,EAAH,EAAGA,SAAH,OACxC,kBAACuP,GAAD,KACGvP,I,iICDL,IAMMsI,GAAc3G,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAK5ByM,GAZqB,SAAC,GAAe,IAAbjP,EAAY,EAAZA,MACrC,OACE,kBAAC,GAAD,KAAcA,ICeHkP,GAnBK,SAACjS,GAA4B,IAAD,EAChByC,mBAASrC,YAAUC,KAAK,IADR,mBACvC/E,EADuC,KAC9BiN,EAD8B,KAEtC5N,EAAY4H,cAAZ5H,QACFyH,EAAYY,IAEZwF,EAAenF,sBAAW,sBAAC,4BAAAC,EAAA,sEACTlB,EAAU8P,eAAelS,EAAUrF,GAD1B,OACzBW,EADyB,OAE/BiN,EAAWjN,GAFoB,2CAG9B,CAACX,EAASqF,IAQb,OANA2C,qBAAU,WACJhI,GAAWqF,GAAYoC,GACzBoG,IAAe5E,OAAM,SAACC,GAAD,OAASpF,QAAQmB,MAAMiE,EAAI1D,YAEjD,CAACxF,EAASqF,EAAUuI,EAAYnG,IAE5B9G,GCLM6W,GAZI,SAACC,GAClB,IAAMhQ,EAAYY,IACZ6I,EAAiBK,KAOvB,MAAO,CAAEmG,SALYhP,sBAAW,sBAAC,4BAAAC,EAAA,sEACdlB,EAAU3B,KAAK2R,EAAK/X,UADN,OACzByS,EADyB,OAE/BjB,EAAeiB,EAAI,CAAER,QAAQ,WAAD,OAAa8F,EAAKzQ,cAAlB,iBAAwCyQ,EAAK/X,YAF1C,2CAG9B,CAAC+X,EAAMhQ,EAAWyJ,M,olBCWvB,IAyBMyG,GAAmBrO,IAAOC,IAAV,MAKhBqO,GAAoBtO,IAAOC,IAAV,MAGP,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MASzCgN,IALevO,IAAOC,IAAV,MACN,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGXvB,IAAOC,IAAV,OAQbuO,GAlDyB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KACnCM,EAAWT,GAAYG,EAAK/X,UAC1BgY,EAAaF,GAAWC,GAAxBC,SAEFM,EAAmC,QAAvBP,EAAKzQ,cAA0B,QAAU,OAC3D,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC6Q,GAAD,KACE,kBAACF,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAanY,OAAQiY,EAAK1O,UAAUvJ,UAEtC,kBAAC,GAAD,CAAO4I,MAAO6F,GAAkB8J,KAChC,kBAAC,GAAD,CAAO7K,KAAI,gBAAW8K,EAAX,cAEb,kBAACJ,GAAD,KACE,kBAAC,GAAD,CAAQ1N,QAASwN,EAAUxK,KAAK,gB,yEChC5C,IAMMqJ,GAAajN,IAAOC,IAAV,MAGD0O,GATQ,SAAC,GAAD,IAAGtQ,EAAH,EAAGA,SAAH,OACrB,kBAAC,GAAD,KACGA,ICiBUuQ,GAtBsB,SAAC,GAAe,IAAbvN,EAAY,EAAZA,MACvBwN,EAAe7P,qBAAWoD,KAAjCf,MACR,OACE,kBAAC,GAAD,KACE,yBACEsB,OAAO,KACP8G,QAAQ,YACRxH,MAAM,MAEN,0BACErM,EAAE,gBACF8T,KAAK,SAEP,0BACE9T,EAAE,sCACF8T,KAAMrI,GAAgBwN,EAAWvN,KAAK,UCGjCwN,GAlByB,SAAC,GAAe,IAAbzN,EAAY,EAAZA,MAC1BwN,EAAe7P,qBAAWoD,KAAjCf,MACR,OACE,kBAAC,GAAD,KACE,yBACEoI,QAAQ,YACRC,KAAMrI,GAAgBwN,EAAWvN,KAAK,KACtCW,MAAM,OACNU,OAAO,QAEP,0BAAM/M,EAAE,gBAAgB8T,KAAK,SAC7B,0BAAM9T,EAAE,yB,qtBCJhB,ICJYmZ,GDsBN/L,GAAehD,IAAOiD,OAAV,MAEI,SAAA9B,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAG3C,SAAAH,GAAK,OAAKA,EAAMgC,SAA4ChC,EAAMC,MAAMC,MAAMC,KAAK,KAAxDH,EAAMC,MAAMC,MAAM2C,QAAQC,QAU5C,SAAA9C,GAAK,OAAKA,EAAMgC,SAAuB,YAAZxC,KAIvB,SAAAQ,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAIlDJ,GAAalB,YAAOsD,IAAPtD,CAAH,MAOF,SAAAmB,GAAK,OAAKA,EAAMC,MAAMG,QAAQ,MAC7B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAI7ByN,GArD+B,SAAC,GAAyC,IAAvC3Q,EAAsC,EAAtCA,SAAU8E,EAA4B,EAA5BA,SAAUvC,EAAkB,EAAlBA,QAASiD,EAAS,EAATA,GAC5E,OACE,kBAAC,GAAD,CAAcV,SAAUA,EAAUvC,QAASA,GACtCiD,EACD,kBAAC,GAAD,CAAYA,GAAIA,GAAKxF,GACnBA,IESK4Q,GApBM,SAAC7T,EAAcpE,GAAqB,IAAD,EACpBwH,mBAASrC,YAAUC,KAAK,IADJ,mBAC/CnF,EAD+C,KACpCiY,EADoC,KAE9CxY,EAAqD4H,cAArD5H,QAEFyY,EAAiB/P,sBAAW,sBAAC,4BAAAC,EAAA,sEACTjE,EAAMnE,UAAUP,EAASM,GADhB,OAC3BC,EAD2B,OAEjCiY,EAAajY,GAFoB,2CAGhC,CAACP,EAASM,EAASoE,IAUtB,OARAsD,qBAAU,WACJhI,GAAWM,GAAWoE,GACxB+T,IAAiBxP,OAAM,SAACC,GAAD,OAASpF,QAAQC,IAAR,qCAA0CmF,EAAI1D,WAEhF,IAAIsI,EAAkBC,YAAY0K,EAAgB,KAClD,OAAO,kBAAMzK,cAAcF,MAC1B,CAAC9N,EAASM,EAASoE,IAEfnE,GDjBHmY,GAAiBnW,SAAOoW,UAAUC,Y,SAE5BP,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,Q,KA8CGQ,OAtCf,SAAoBnU,EAAcpE,GAChC,IAAMwY,EAAmBP,GAAa7T,EAAOpE,GACvCyY,EpB6CD,SACLC,EACA1Y,GAEA,IAAMmV,EAAkB3D,KACxB,OAAOrE,mBACL,iBAC0B,kBAAjBuL,GACY,kBAAZ1Y,GACPsC,OAAOqW,KAAKxD,GAAiByD,MAAK,SAACrH,GACjC,IAAMM,EAAKsD,EAAgB5D,GAC3B,IAAKM,EAAI,OAAO,EAChB,GAAIA,EAAGmC,QACL,OAAO,EAEP,IAAM1C,EAAWO,EAAGP,SACpB,QAAKA,IAEHA,EAAStR,UAAYA,GACrBsR,EAASoH,eAAiBA,GAC1B9G,GAAoBC,SAI5B,CAACsD,EAAiBnV,EAAS0Y,IoBrELG,CAAsBzU,EAAMpF,QAASgB,GAGvD8Y,EAA+B3L,mBAAQ,WAE3C,OAAKqL,EAGEA,EAAiBO,GAAGX,IACvBK,EACEV,GAAciB,QACdjB,GAAckB,aAChBlB,GAAcmB,SAPYnB,GAAcoB,UAQ3C,CAACX,EAAkBC,IAEhB7H,EAAiBK,KAEjB/Q,EAAUkI,sBAAW,sBAAC,4BAAAC,EAAA,yDACtByQ,IAAkBf,GAAckB,aADV,uBAExBzV,QAAQmB,MAAM,oCAFU,0CAMHP,EAAMlE,QAAQF,EAASoY,IANpB,OAMpBhH,EANoB,OAO1BR,EAAeQ,EAAU,CACvBC,QAAQ,WAAD,OAAajN,EAAMlF,QAC1BoS,SAAU,CACRoH,aAActU,EAAMpF,QACpBgB,QAASA,KAXa,2CAczB,CAAC8Y,EAAe1U,EAAOpE,EAAS4Q,IAEnC,MAAO,CAACkI,EAAe5Y,IE9BVkZ,GAhBE,SAACjC,GAChB,IAAMhQ,EAAYY,IACZ6I,EAAiBK,KAWvB,MAAO,CAAEoI,QATWjR,sBAAW,uCAC7B,WAAOvI,GAAP,eAAAwI,EAAA,sEACmBlB,EAAU9B,MAAM8R,EAAK/X,SAAUS,GADlD,OACQgS,EADR,OAEEjB,EAAeiB,EAAI,CACjBR,QAAQ,SAAD,OAAWxR,EAAX,YAAqBsX,EAAK1Q,iBAA1B,eAAiD0Q,EAAK/X,YAHjE,2CAD6B,sDAO7B,CAAC+X,EAAMhQ,EAAWyJ,MCWP0I,GApBU,SAACvU,GAA4B,IAAD,EACrByC,mBAASrC,YAAUC,KAAK,IADH,mBAC5C/E,EAD4C,KACnCiN,EADmC,KAE3C5N,EAAY4H,cAAZ5H,QACFyH,EAAYY,IAEZwF,EAAenF,sBAAW,sBAAC,4BAAAC,EAAA,sEACTlB,EAAUoS,oBAAoBxU,EAAUrF,GAD/B,OACzBW,EADyB,OAE/BiN,EAAWjN,GAFoB,2CAG9B,CAACX,EAASqF,IASb,OAPA2C,qBAAU,WACJhI,GAAWqF,GAAYoC,GACzBoG,IACG5E,OAAM,SAAAC,GAAG,OAAIpF,QAAQmB,MAAMiE,EAAI1D,YAEnC,CAACxF,EAASqF,EAAUuI,EAAYnG,IAE5B9G,GCJMmZ,GAfK,SAACrC,GACnB,IAAMhQ,EAAYY,IACZ6I,EAAiBK,KAUvB,MAAO,CAAEwI,WATcrR,sBAAW,uCAChC,WAAOvI,GAAP,eAAAwI,EAAA,sEACuBlB,EAAUuS,QAAQvC,EAAK/X,SAAUS,GADxD,OACQ8Z,EADR,OAEE/I,EAAe+I,EAAQ,CACrBtI,QAAQ,YAAD,OAAcxR,EAAd,YAAwBsX,EAAK1Q,iBAA7B,iBAAsD0Q,EAAK/X,YAHtE,2CADgC,sDAOhC,CAAC+X,EAAMhQ,EAAWyJ,M,sZCJtB,IAgBMgJ,GAAqB5Q,IAAOC,IAAV,MAEF,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QACnC,SAAAH,GAAK,OAAIA,EAAMC,MAAM8I,gBAEzB,SAAA/I,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGtCsP,GAAc7Q,IAAO8Q,MAAV,MAGN,SAAA3P,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAS5ByP,GApCqB,SAAC,GAM9B,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACArS,EACI,EADJA,MAEA,OACE,kBAAC8R,GAAD,OACKO,GAAkBA,EACrB,kBAACN,GAAD,CAAaK,YAAaA,EAAapS,MAAOA,EAAOmS,SAAUA,MAC5DD,GAAgBA,I,+lBCVzB,IAkCMI,GAAmBpR,IAAOC,IAAV,MAIhByG,GAAe1G,IAAOC,IAAV,MACP,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGlC8P,GAA8BrR,IAAOC,IAAV,MAK3BqR,GAAgBtR,IAAOC,IAAV,MAER,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAQrCiQ,GAAoBvR,IAAOuC,KAAV,MACZ,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAI5BkQ,GA9D+B,SAAC,GAMxC,IALLC,EAKI,EALJA,IACAvb,EAII,EAJJA,OACA+a,EAGI,EAHJA,SACAS,EAEI,EAFJA,YACA5S,EACI,EADJA,MAEA,OACE,kBAACsS,GAAD,KACE,kBAACE,GAAD,KAAgBG,EAAIE,iBAApB,IAAuCzb,EAAvC,cACA,kBAAC,GAAD,CACE8a,aACE,kBAACK,GAAD,KACE,kBAACE,GAAD,KAAoBrb,GACpB,kBAAC,GAAD,MACA,6BACE,kBAAC,GAAD,CAAQiM,KAAK,KAAKyB,KAAK,MAAMhD,QAAS8Q,MAI5CT,SAAUA,EACVC,YAAY,IACZpS,MAAOA,MCkBA8S,GAlCmC,SAAC,GAA6D,IAA3DH,EAA0D,EAA1DA,IAAK7M,EAAqD,EAArDA,SAAUiN,EAA2C,EAA3CA,UAAW/R,EAAgC,EAAhCA,UAAgC,IAArB4O,iBAAqB,MAAT,GAAS,IACvFlQ,mBAAS,IAD8E,mBACtGsT,EADsG,KACjGC,EADiG,KAGvGC,EAAc7N,mBAAQ,WAC1B,OAAOa,GAAsByM,EAAK7M,KACjC,CAAC6M,IAEEQ,EAAe7S,uBAAY,SAAC8S,GAChCH,EAAOG,EAAEC,cAAcrT,SACtB,CAACiT,IAEEK,EAAkBhT,uBAAY,WAClC2S,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnO,KAAI,kBAAa8K,KAC7B,kBAAC,GAAD,CACE5P,MAAOgT,EACPJ,YAAaU,EACbnB,SAAUgB,EACVR,IAAKO,EACL9b,OAAQwY,IAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ9K,KAAK,SAASE,QAAQ,YAAYlD,QAASd,IACnD,kBAAC,GAAD,CAAQ8D,KAAK,UAAUhD,QAAS,kBAAMiR,EAAUC,SCKzCO,GAjCqC,SAAC,GAAmD,IAAjDR,EAAgD,EAAhDA,UAAW/R,EAAqC,EAArCA,UAAW2R,EAA0B,EAA1BA,IAA0B,IAArB/C,iBAAqB,MAAT,GAAS,IAC/ElQ,mBAAS,IADsE,mBAC9FsT,EAD8F,KACzFC,EADyF,KAG/FC,EAAc7N,mBAAQ,WAC1B,OAAOa,GAAsByM,KAC5B,CAACA,IAEEQ,EAAe7S,uBAAY,SAAC8S,GAChCH,EAAOG,EAAEC,cAAcrT,SACtB,CAACiT,IAEEK,EAAkBhT,uBAAY,WAClC2S,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnO,KAAI,mBAAc8K,KAC9B,kBAAC,GAAD,CACEgD,YAAaU,EACbnB,SAAUgB,EACVnT,MAAOgT,EACPL,IAAKO,EACL9b,OAAQwY,IAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ9K,KAAK,SAASE,QAAQ,YAAYlD,QAASd,IACnD,kBAAC,GAAD,CAAQ8D,KAAK,UAAUhD,QAAS,kBAAMiR,EAAUC,S,olBCdxD,IAiEMzD,GAAmBrO,IAAOC,IAAV,MAKhBqO,GAAoBtO,IAAOC,IAAV,MAGP,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIzC+Q,GAAqBtS,IAAOC,IAAV,MACZ,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGpCgN,GAAyBvO,IAAOC,IAAV,MAQbsS,GA1FqB,SAAC,GAAc,IAAZpE,EAAW,EAAXA,KAAW,EACfoB,GAAWpB,EAAK3O,aAAc2O,EAAKnY,SADpB,mBACzCwc,EADyC,KAC1Btb,EAD0B,KAI1Cub,EAAepO,GAAgB8J,EAAK3O,cACpCkT,EAAgBpC,GAAiBnC,EAAK/X,UAEpCia,EAAYD,GAASjC,GAArBkC,QACAI,EAAeD,GAAYrC,GAA3BsC,WARwC,EAUrB3N,GACzB,kBAAC,GAAD,CACE2O,IAAKgB,EACL7N,SAAUuJ,EAAK3O,aAAarJ,QAC5B0b,UAAWxB,EACX3B,UAAWP,EAAK1Q,oBALbkV,EAVyC,sBAmBpB7P,GAC1B,kBAAC,GAAD,CACE2O,IAAKiB,EACLb,UAAWpB,EACX/B,UAAWP,EAAK1Q,oBAJbmV,EAnByC,oBA2BhD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAa1c,OAAQiY,EAAK3O,aAAatJ,OAAQiM,KAAM,MAEvD,kBAAC,GAAD,CAAOrD,MAAO6F,GAAkB+N,EAAevE,EAAK3O,aAAarJ,WACjE,kBAAC,GAAD,CAAOyN,KAAI,UAAKuK,EAAK1Q,iBAAV,cAEb,kBAAC,GAAD,KACG+U,IAAkBzD,GAAcmB,SAC/B,kBAAC,GAAD,CACE/M,SAAUqP,GAAiBzD,GAAciB,QACzCpP,QAAS1J,EACT0M,KAAI,kBAAauK,EAAK1Q,oBAGxB,oCACE,kBAAC,GAAD,CAAYmD,QAASgS,GACnB,kBAAC,GAAD,OAEF,kBAACN,GAAD,MAC2B,oBAA1BnE,EAAK1Q,kBACJ,kBAAC,GAAD,CAAYmD,QAAS+R,GACnB,kBAAC,GAAD,aC1ELE,GALC,SAACC,GAEf,OADkB9T,qBAAW+T,GAArB5d,MACK6d,MAAK,SAAC7E,GAAD,OAAUA,EAAK/X,WAAa0c,MCWjCG,GAZG,SAAC9E,GACjB,IAAMhQ,EAAYY,IACZ6I,EAAiBK,KAOvB,MAAO,CAAEiL,SALY9T,sBAAW,sBAAC,4BAAAC,EAAA,sEACdlB,EAAU3B,KAAK2R,EAAK/X,UADN,OACzByS,EADyB,OAE/BjB,EAAeiB,EAAI,CAAER,QAAQ,UAAD,OAAY8F,EAAK/X,YAFd,2CAG9B,CAAC+X,EAAMhQ,EAAWyJ,M,69BCGvB,IA8CMuL,GAAe,WACnB,OACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CACE7F,KAAK,eACLE,MAAM,YACND,SAAS,iDAMX6F,GAAe,WAAO,IAClBhZ,EAAYiE,cAAZjE,QACR,OACE,kBAAC+Y,GAAD,KACE,kBAAC,GAAD,CAAQxS,QAAS,kBAAMvG,EAAQ,aAAauJ,KAAK,oBAKjD0P,GAAatT,IAAOC,IAAV,MAaViB,IAJuBlB,IAAOC,IAAV,MAIPD,IAAOX,EAAV,MAGL,SAAA8B,GAAK,OAAIA,EAAMC,MAAMC,MAAM2C,QAAQC,SAIxCsP,GAAqBvT,IAAOC,IAAV,MAUlBuT,GAAoBxT,IAAOC,IAAV,MASjBmT,GAASpT,IAAOC,IAAV,MAOGwT,GAjHQ,WACrB/U,qBAAU,kBAAMgV,OAAOC,SAAS,EAAG,MADR,IAGnBC,EAAWC,cAAXD,OACFzF,EAAO0E,GAAQe,GAEbld,EAAY4H,cAAZ5H,QACAwc,EAAaD,GAAU9E,GAAvB+E,SAER,OAAOxc,GAAWyX,EAChB,oCACE,kBAAC,GAAD,CACEZ,KAAK,eACLC,SAAQ,yBAAaW,QAAb,IAAaA,OAAb,EAAaA,EAAM1Q,iBAAnB,4BAAgD0Q,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAMzQ,eAC9D+P,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMxW,OAEf,kBAAC2b,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CAASrF,KAAMA,KAEjB,kBAAC,GAAD,MACA,kBAACqF,GAAD,KACE,kBAAC,GAAD,CAAOrF,KAAMA,MAGjB,kBAAC,GAAD,CAAQhM,KAAK,OACZgM,EAAK1Q,iBAAiBjE,SAAS,OAC9B,kBAAC,GAAD,CAAYiI,KAAK,iCAAjB,4EAIF,kBAAC,GAAD,CAAQU,KAAK,OACb,6BACE,kBAAC,GAAD,CAAQvB,QAASsS,EAAUtP,KAAK,uBAElC,kBAAC,GAAD,CAAQzB,KAAK,SAGdgM,EAGH,kBAAC,GAAD,MAFA,kBAAC,GAAD,O,kQC7CJ,IAWM2F,GAAe9T,IAAOC,IAAV,MAOZqC,GAAatC,IAAOC,IAAV,MACL,SAAAkB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAG5ByS,GAtBuB,SAAC,GAAc,IAAZnQ,EAAW,EAAXA,KACvC,OACE,kBAACkQ,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAa5d,OAAO,MAAMiM,KAAM,QAE/ByB,GAAQ,kBAAC,GAAD,KAAaA,KCRfoQ,GALE,WAEf,MAAO,CADWhV,qBAAW+T,GAArB5d,Q,ikFCSV,IA4CM8e,GAAoC,SAAC,GAAc,IAAZ9F,EAAW,EAAXA,KAC3C,OACE,kBAAC,GAAD,KACGA,EAAK1Q,iBAAiBjE,SAAS,QAC7B2U,EAAK1Q,iBAAiBjE,SAAS,WAC9B,kBAAC0a,GAAD,MAEA,kBAACC,GAAD,OAEJ,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAale,OAAQiY,EAAK1Q,iBAAkB0E,KAAM,MAEpD,kBAAC,GAAD,KAAcgM,EAAKxW,MACnB,kBAAC0c,GAAD,KACE,kBAACC,GAAD,gBAAuBnG,EAAK1Q,iBAAiB8W,eAC7C,kBAACD,GAAD,6BAA6BnG,EAAKzQ,iBAEpC,kBAAC,GAAD,CAAQkG,KAAK,SAASC,GAAE,gBAAWsK,EAAK/X,iBAQ9C+d,GAAmBnU,IAAOC,IAAV,MAyBhBiU,GAAwBlU,IAAOC,IAAV,MAyBrBuU,GAAcxU,IAAOC,IAAV,MAOXwU,GAAuBzU,IAAOC,IAAV,MAOpByU,GAAY1U,IAAOC,IAAV,MAGI,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAS5CiS,GAAoBxT,IAAOC,IAAV,MAEE,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIlD2L,GAAclN,IAAO2U,GAAV,MACN,SAACxT,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAIjC,SAACH,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIrC6S,GAAgBpU,IAAOC,IAAV,MAMbyG,GAAe1G,IAAOC,IAAV,MACN,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGpC8S,GAAgBrU,IAAOC,IAAV,MACA,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAClC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIzC+S,GAAetU,IAAOC,IAAV,MACP,SAACkB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAG9BsT,GAxLa,WAAO,IAAD,EAChBZ,KAAT7e,EADyB,oBAG5B0f,GAAmB,EACjBC,EAAO3f,EAAM4f,QACjB,SAACC,EAAU7G,GACT,IAAM8G,EAAW,YAAOD,GAOxB,OANIC,EAAYA,EAAYzJ,OAAS,GAAGA,UAAYqJ,EAAmB,EAAI,IACzEI,EAAY1V,KAAK,CAAC4O,IAClB0G,GAAmB,GAEnBI,EAAYA,EAAYzJ,OAAS,GAAGjM,KAAK4O,GAEpC8G,IAET,CAAC,KAGH,OACE,kBAACT,GAAD,KACKM,EAAK,GAAGtJ,OACTsJ,EAAKrJ,KAAI,SAACyJ,EAASvJ,GAAV,OACP,kBAAC+I,GAAD,CAAW3I,IAAKJ,GACbuJ,EAAQzJ,KAAI,SAAC0C,EAAMgH,GAAP,OACX,kBAAC,IAAMC,SAAP,CAAgBrJ,IAAKoJ,GACnB,kBAAC,GAAD,CAAUhH,KAAMA,IACfgH,EAAID,EAAQ1J,OAAS,GAAK,kBAAC,GAAD,cAMnC,kBAACiJ,GAAD,KACE,kBAAC,GAAD,CAAQ7Q,KAAK,oBClBR3E,GArBS,WAAO,IACrBoW,EAASC,cAATD,KACR,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAO3N,OAAK,EAAC2N,KAAMA,GACjB,kBAAC,GAAD,CACE9H,KAAM,eACNE,MAAM,eACND,SAAS,0DAEX,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAO6H,KAAI,UAAKA,EAAL,aACT,kBAAC,GAAD,U,8oCCNV,IAoBME,GAAUvV,IAAOC,IAAV,MAEK,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAI3CiU,GAAaxV,IAAOyV,GAAV,MAKVjB,GAAcxU,IAAOC,IAAV,MAEJ,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MACjC,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,MAAMwM,SAClB,SAAC1M,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAOlDqF,GAAc3G,IAAOuC,KAAV,MAMXmT,GAAc1V,IAAOC,IAAV,MACE,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAO5CoU,GAAuB3V,IAAOC,IAAV,MACT,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAC5B,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAG7CqU,GAAgB,WACpB,IAAMxU,EAAQpC,qBAAWoD,KACzB,OACE,kBAAC,iBAAD,CAAef,MAAOD,EAAMC,MAAMC,KAAK,KAAMuU,eAAgBzU,EAAMC,MAAMC,KAAK,MAC5E,kBAACqU,GAAD,KACE,kBAAC,KAAD,CAAUhT,OAAQ,QAkBXmT,IAZG9V,IAAOuC,KAAV,MACJ,SAACpB,GAAD,OAAWA,EAAMC,MAAMC,MAAM2C,QAAQC,QAI9BjE,IAAO+V,EAAV,MACJ,SAAC5U,GAAD,OAAWA,EAAMC,MAAMC,MAAMwM,SAG5B,SAAC1M,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAjFD,SAAC,GAAoC,IAAlCkM,EAAiC,EAAjCA,MAAOvX,EAA0B,EAA1BA,OAAQmL,EAAkB,EAAlBA,MAAO2U,EAAW,EAAXA,KACjE,OACE,kBAACT,GAAD,KACE,kBAACC,GAAD,KAAa/H,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAavX,OAAQA,IACrB,kBAACwf,GAAD,KACGM,EAAO,kBAAC,GAAD,SAAeA,EAAKpb,YAA4B,kBAAC,GAAD,MACxD,kBAAC,GAAD,CAAOgJ,KAAK,gBAAgBvC,MAAOA,KAGrC,kBAACqU,GAAD,KACGM,EAAO,kBAAC,GAAD,KAAcA,EAAKvf,aAA6B,kBAAC,GAAD,MACxD,kBAAC,GAAD,CAAOmN,KAAK,eAAevC,MAAOA,S,6sBCmCrBrB,IAAOC,IAAV,MAtDpB,IAgEMgW,GAAcjW,IAAOC,IAAV,MAsBFiW,IAXMlW,IAAOC,IAAV,MACN,SAAAkB,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAC9B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,MAGrBvB,IAAOX,EAAV,MAGL,SAAA8B,GAAK,OAAIA,EAAMC,MAAMC,MAAM2C,QAAQC,QAnFvB,WACrB,IAAM9F,EAAYY,IADS,EAGeP,mBAAuB,IAHtC,0BAGlB2X,EAHkB,EAGlBA,KAAMC,EAHY,EAGZA,KAAMC,EAHM,EAGNA,MAASC,EAHH,KAIrBC,EAAanX,sBAAW,sBAAC,oCAAAC,EAAA,sEACKmX,QAAQC,IAAI,CAC5CtY,EAAUuY,cACVvY,EAAUwY,cACVxY,EAAUyY,iBAJiB,mCACtBT,EADsB,KAChBC,EADgB,KACVC,EADU,KAM7BC,EAAS,CAAEH,OAAMC,OAAMC,UANM,2CAO5B,CAAClY,EAAWmY,IASf,OAPA5X,qBAAU,WACJP,GACFoY,IACG5W,OAAM,SAAAC,GAAG,OAAIpF,QAAQmB,MAAMiE,EAAI1D,YAEnC,CAACiC,IAGF,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEoP,KAAK,eACLC,SAAS,8EACTC,MAAM,2BAER,kBAAC,GAAD,MACA,kBAACwI,GAAD,KACE,kBAAC,GAAD,CACExI,MAAO,aACPvX,OAAO,MACPmL,MAAM,UACN2U,KAAMG,IAER,kBAAC,GAAD,CAAQhU,KAAK,OACb,kBAAC,GAAD,CACEsL,MAAO,cACPvX,OAAO,MACPmL,MAAM,UACN2U,KAAMK,IAER,kBAAC,GAAD,CAAQlU,KAAK,OACb,kBAAC,GAAD,CACEsL,MAAO,cACPvX,OAAO,MACPmL,MAAM,UACN2U,KAAMI,Q,oBCGDS,GAxCqC,SAAC,GAQ9C,IAPLpF,EAOI,EAPJA,IACAhE,EAMI,EANJA,MACAqJ,EAKI,EALJA,YACAjF,EAII,EAJJA,UACA/R,EAGI,EAHJA,UACAiX,EAEI,EAFJA,OACArI,EACI,EADJA,UACI,EACkBlQ,mBAAS,IAD3B,mBACGsT,EADH,KACQC,EADR,KAEEC,EAAc7N,mBAAQ,kBAAMa,GAAsByM,KAAM,CAACA,IAEzDQ,EAAe7S,uBACnB,SAAC8S,GAAD,OAA0CH,EAAOG,EAAEC,cAAcrT,SACjE,CAACiT,IAGGK,EAAkBhT,uBAAY,WAClC2S,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnO,KAAM6J,IAClB,kBAAC,GAAD,CACE3O,MAAOgT,EACPJ,YAAaU,EACbnB,SAAUgB,EACVR,IAAKO,EACL9b,OAAQwY,IAEV,kBAAC,GAAD,CAAO9K,KAAMkT,IACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQlT,KAAK,SAASE,QAAQ,YAAYlD,QAASd,IACnD,kBAAC,GAAD,CAAQ8D,KAAMmT,EAAQnW,QAAS,kBAAMiR,EAAUC,S,i4CC1BvD,IAqDMkF,GAAkBhX,IAAOC,IAAV,MAEV,SAACkB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAM7B,SAACH,GAAD,OAAYA,EAAMC,MAAMG,QAAQ,MAG1CqM,GAAiB5N,IAAOC,IAAV,MACE,SAACkB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAOrC,SAACH,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAG5C0V,GAAkBjX,IAAOC,IAAV,MAGF,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAG5C2V,GAAsBlX,IAAOC,IAAV,MAEd,SAACkB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAC3B,SAACH,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAC9B,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAC9B,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAG7C4V,GAAcnX,IAAOC,IAAV,MAOXqO,GAAoBtO,IAAOC,IAAV,MAGP,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIzC6V,GAAapX,IAAOuC,KAAV,MACL,SAACpB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAGvCiN,GAAyBvO,IAAOC,IAAV,MAQboX,GAnHmC,SAAC,GAS5C,IARLN,EAQI,EARJA,OACAO,EAOI,EAPJA,UACAC,EAMI,EANJA,cACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,WAEI,IADJxU,gBACI,SACE9L,EAAUgN,GAAgBiT,GAD5B,EAE2BxU,GAC7B,kBAAC,GAAD,CACE2K,MAAOsJ,EACPD,YAAaY,EACbjG,IAAKpa,EACLwa,UAAW8F,EACXZ,OAAQA,EACRrI,UAAW6I,KATX,mBAEG1X,EAFH,UAYJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACmX,GAAD,eAAqBD,EAArB,YAA+BU,IAC/B,kBAACR,GAAD,KACE,kBAACE,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAajhB,OAAQohB,EAAUphB,OAAQiM,KAAM,MAE/C,kBAAC,GAAD,CAAOyB,KAAM2T,EAAezT,QAAQ,YAEtC,kBAACoT,GAAD,KACE,kBAAC,KAAD,CAAiB3J,KAAMqK,QAEzB,kBAACT,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAajhB,OAAQshB,EAAQthB,OAAQiM,KAAM,MAE7C,kBAAC,GAAD,CAAOyB,KAAM6T,EAAa3T,QAAQ,aAGtC,kBAACsT,GAAD,KAAaM,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ9T,KAAMmT,EAAQnW,QAASf,EAAWsD,SAAUA,SCnDjD0U,GAjBM,WAAO,IAAD,EACDrZ,qBADC,mBAClBwX,EADkB,KACZ8B,EADY,KAEnB3Z,EAAYY,IAEZgZ,EAAiB3Y,sBAAW,sBAAC,sBAAAC,EAAA,kEACjCyY,EADiC,SACnB3Z,EAAUwY,cADS,6EAEhC,CAACxY,IAQJ,OANAO,qBAAU,WACRqZ,IAAiBpY,OAAM,SAACC,GAAD,OAASpF,QAAQmB,MAAR,qCAA4CiE,EAAI1D,WAChF,IAAMsI,EAAkBC,YAAYsT,EAAgB,KACpD,OAAO,kBAAMrT,cAAcF,MAC1B,CAACsT,EAAS3Z,IAEN6X,G,kZCJT,IAsFMgC,GAAahY,IAAOC,IAAV,MAUVuT,GAAoBxT,IAAOC,IAAV,MASR9F,GAzGQ,WAAO,IACpBkb,EAASC,cAATD,KADmB,EAEE/W,cAArB5H,EAFmB,EAEnBA,QAAS2D,EAFU,EAEVA,QACX8D,EAAYY,IACZ6I,EAAiBK,KACjBgQ,EAAWJ,KAEXK,EAAiB9Y,sBAAW,uCAChC,WAAOvI,GAAP,iBAAAwI,EAAA,sEACmBlB,EAAUtC,SAAShF,GADtC,OACQgS,EADR,OAEQsP,EAAa3gB,OAAOX,GAAUW,OAAOygB,EAASrd,YACpDgN,EAAeiB,EAAI,CACjBR,QAAQ,OAAD,OAAS8P,EAAWrd,YAAY,GAAhC,qBAA+CjE,EAA/C,UAJX,2CADgC,sDAQhC,CAACsH,EAAWyJ,EAAgBqQ,IAGxBG,EAAoBhZ,sBAAW,uCACnC,WAAOvI,GAAP,iBAAAwI,EAAA,sEACmBlB,EAAUrC,YAAYjF,GADzC,OACQgS,EADR,OAEQsP,EAAa3gB,OAAOX,GAAUW,OAAOygB,EAASrd,YACpDgN,EAAeiB,EAAI,CACjBR,QAAQ,UAAD,OAAY8P,EAAZ,UAJX,2CADmC,sDAQnC,CAACha,EAAWyJ,EAAgBqQ,IAG9B,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACKvhB,EACD,oCACE,kBAAC,IAAD,CAAOgR,OAAK,EAAC2N,KAAMA,GACjB,kBAAC,GAAD,CACE9H,KAAM,eACNE,MAAM,qBACND,SAAS,mCAGb,kBAACwK,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEjB,OAAO,WACPO,UAAWnZ,EAAUvF,IACrB2e,cAAc,aACdC,QAASrZ,EAAUrF,IACnB2e,YAAY,aACZC,UAAS,qBAAiBO,EAAiB,IAAMA,EAASrd,WAArB,KACrC+c,WAAYO,EACZ/U,UAAW8U,KAGf,kBAAC,GAAD,CAAQ9V,KAAK,OACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE4U,OAAO,SACPO,UAAWnZ,EAAUrF,IACrBye,cAAc,aACdC,QAASrZ,EAAUvF,IACnB6e,YAAY,aACZC,UAAU,gBACVC,WAAYS,EACZjV,UAAW8U,OAMnB,yBACErV,MAAO,CACLyV,WAAY,SACZ1L,QAAS,OACTD,KAAM,EACNE,eAAgB,WAGlB,kBAAC,GAAD,CAAQhM,QAAS,kBAAMvG,EAAQ,aAAauJ,KAAK,sB,UCnFvD0U,GAAM,kBAAM,IAAIxP,MAAOC,WAqBdwP,gBAF+B,IAEH,SAACC,GAAD,OACzCA,EACGC,QACC7Q,IACA,SAACe,EAAD,GAA4E,IAAD,QAA1D+P,QAAW1d,EAA+C,EAA/CA,QAASoB,EAAsC,EAAtCA,KAAMmM,EAAgC,EAAhCA,KAAMD,EAA0B,EAA1BA,SAAUD,EAAgB,EAAhBA,QACzD,aAAIM,EAAa3N,UAAjB,aAAI,EAAwBuN,GAC1B,MAAM/B,MAAM,0CAEd,IAAMmS,EAAG,UAAGhQ,EAAa3N,UAAhB,QAA4B,GACrC2d,EAAIpQ,GAAQ,CAAEA,OAAMD,WAAUD,UAASjM,OAAM4M,UAAWsP,MACxD3P,EAAa3N,GAAW2d,KAG3BF,QAAQ3Q,IAAsB,SAACa,EAAD,GAA6C,IAAjB3N,EAAgB,EAA3B0d,QAAW1d,QACpD2N,EAAa3N,KAClB2N,EAAa3N,GAAW,OAEzByd,QACCzQ,IACA,SAACW,EAAD,GAAgE,IAAD,MAA9C+P,QAAW1d,EAAmC,EAAnCA,QAASuN,EAA0B,EAA1BA,KAAMqQ,EAAoB,EAApBA,YACnC/P,EAAE,UAAGF,EAAa3N,UAAhB,aAAG,EAAwBuN,GAC9BM,IAGAA,EAAGgQ,uBAGNhQ,EAAGgQ,uBAAyBC,KAAKrH,IAAImH,EAAa/P,EAAGgQ,wBAFrDhQ,EAAGgQ,uBAAyBD,MAMjCH,QAAQ1Q,IAAqB,SAACY,EAAD,GAA4D,IAAD,MAA1C+P,QAAWnQ,EAA+B,EAA/BA,KAAMvN,EAAyB,EAAzBA,QAASgQ,EAAgB,EAAhBA,QACjEnC,EAAE,UAAGF,EAAa3N,UAAhB,aAAG,EAAwBuN,GAC9BM,IAGLA,EAAGmC,QAAUA,EACbnC,EAAGkQ,cAAgBT,YCzDZU,GAAoBnR,aAC/B,yBAGWoR,GAAoBpR,aAAmB,yBAEvCqR,GAAqBrR,aAAmB,0BAExCsR,GAAWtR,aAIrB,gBAEUuR,GAAcvR,aAA8B,mBCO1C0Q,gBAPwB,CACrCK,YAAa,GACbS,UAAW,GACXC,iBAAiB,EACjBC,kBAAkB,IAGuB,SAACf,GAAD,OACzCA,EACGC,QAAQO,IAAmB,SAACvQ,EAAOsO,GAAY,IAAD,EACZA,EAAO2B,QAAhC1d,EADqC,EACrCA,QAAS4d,EAD4B,EAC5BA,YACyB,kBAA/BnQ,EAAMmQ,YAAY5d,GAC3ByN,EAAMmQ,YAAY5d,GAAW4d,EAE7BnQ,EAAMmQ,YAAY5d,GAAW8d,KAAKrH,IAAImH,EAAanQ,EAAMmQ,YAAY5d,OAGxEyd,QAAQQ,IAAmB,SAACxQ,GAC3BA,EAAM6Q,iBAAmB7Q,EAAM6Q,mBAEhCb,QAAQS,IAAoB,SAACzQ,GAC5BA,EAAM8Q,kBAAoB9Q,EAAM8Q,oBAEjCd,QAAQU,IAAU,SAAC1Q,EAAD,GAAkE,IAAD,IAAvDiQ,QAAWpY,EAA4C,EAA5CA,QAASyL,EAAmC,EAAnCA,IAAmC,IAA9ByN,qBAA8B,MAAd,KAAc,EAClF/Q,EAAM4Q,WAAatN,EACftD,EAAM4Q,UAAUhN,QAAO,SAACoN,GAAD,OAAWA,EAAM1N,MAAQA,KAChDtD,EAAM4Q,WACRK,OAAO,CACP,CACE3N,IAAKA,GAAO4N,eACZC,MAAM,EACNtZ,UACAkZ,sBAILf,QAAQW,IAAa,SAAC3Q,EAAD,GAAkC,IAAbsD,EAAY,EAAvB2M,QAAW3M,IACzCtD,EAAM4Q,UAAUQ,SAAQ,SAAC9D,GACnBA,EAAEhK,MAAQA,IACZgK,EAAE6D,MAAO,YC1DbE,GAA2B,CAAC,gBAWnBC,GATDC,aAAe,CAC3BC,QAAS,CACPC,eACAvR,iBAEFwR,WAAW,GAAD,mBAAMC,aAAqB,CAAEC,OAAO,KAApC,CAA8CC,gBAAK,CAAEC,OAAQT,OACvEU,eAAgBC,gBAAK,CAAEF,OAAQT,OCoBpB/V,GAAO,CAClB2W,IAAK,WCJQtZ,GA5BD,CACZ8I,aAAc,GACd7I,MAAO,CACLsZ,MDJiB,OCKjBrZ,KDagB,CAClBsZ,IAAK,UACLF,IAAK,UACLG,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WCrBHnX,QAAS,CACPoX,MDOC,UCNDnX,KDOC,WCLHoB,UAAW,CACTpB,KAAMF,GAAK,MAEb8J,MDdiB,OCejB9J,SAEFjC,UAAW,KACXP,QAAS,CACP8Z,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL9Z,WAAY,ICzBd,IAAM+Z,GAA6B,oBAAqBC,SAExD,SAASC,KACP,OAAQF,IAA2D,WAA7BC,SAASE,gBCGlC,SAASC,KAAiB,IAAD,EACR1d,cAAtBC,EAD8B,EAC9BA,SAAUvD,EADoB,EACpBA,QAEZkN,EAAWC,cAEX8T,EDFO,WAAwC,IAAD,EACtBzd,mBAAkBsd,MADI,mBAC7CI,EAD6C,KACpCC,EADoC,KAE9CC,EAAWhd,uBAAY,WAC3B+c,EAAWL,QACV,CAACK,IAWJ,OATAzd,qBAAU,WACR,GAAKkd,GAGL,OADAC,SAASQ,iBAAiB,mBAAoBD,GACvC,WACLP,SAASS,oBAAoB,mBAAoBF,MAElD,CAACA,IAEGF,ECbeK,GALgB,EAOZ/d,mBAGvB,CACDxD,UACA4d,YAAa,OAZuB,mBAO/BnQ,EAP+B,KAOxB+T,EAPwB,KAehCC,EAAsBrd,uBAC1B,SAACwZ,GACC4D,GAAS,SAAC/T,GACR,OAAIzN,IAAYyN,EAAMzN,QACa,kBAAtByN,EAAMmQ,YAAiC,CAAE5d,UAAS4d,eACtD,CAAE5d,UAAS4d,YAAaE,KAAKrH,IAAImH,EAAanQ,EAAMmQ,cAEtDnQ,OAGX,CAACzN,EAASwhB,IAIZ9d,qBAAU,WACR,GAAKH,GAAavD,GAAYihB,EAA9B,CACAO,EAAS,CAAExhB,UAAS4d,YAAa,OAEjC,IAAM3iB,EAAW,IAAIgD,SAAOC,UAAUC,aAAaoF,GASnD,OARAtI,EACGymB,iBACAC,KAAKF,GACL9c,OAAM,SAAChE,GAAD,OACLnB,QAAQmB,MAAR,kDAAyDX,GAAWW,MAGxE1F,EAAS2mB,GAAG,QAASH,GACd,kBAAMxmB,EAAS4mB,eAAe,QAASJ,OAC7C,CAACvU,EAAUlN,EAASuD,EAAUke,EAAqBR,IAEtD,IAAMa,EClDO,SAAwBhe,EAAUie,GAAmB,IAAD,EACrBve,mBAAYM,GADS,mBAC1Dke,EAD0D,KAC1CC,EAD0C,KAiBjE,OAdAve,qBAAU,WAER,IAAMwe,EAAUC,YAAW,WACzBF,EAAkBne,KACjBie,GAKH,OAAO,WACLK,aAAaF,MAEd,CAACpe,EAAOie,IAEJC,EDiCgBK,CAAY5U,EAAO,KAY1C,OAVA/J,qBAAU,WACHoe,EAAe9hB,SAAY8hB,EAAelE,aAAgBqD,GAC/D/T,EACE8Q,GAAkB,CAChBhe,QAAS8hB,EAAe9hB,QACxB4d,YAAakE,EAAelE,iBAG/B,CAACqD,EAAe/T,EAAU4U,EAAelE,YAAakE,EAAe9hB,UAEjE,KEpCM,SAASghB,KAAiB,IAAD,IACR1d,cAAtBtD,EAD8B,EAC9BA,QAASuD,EADqB,EACrBA,SAEX+e,ECpBD,WAA+C,IAC5CtiB,EAAYsD,cAAZtD,QACR,OAAO0N,aAAY,SAACD,GAAD,OAAqBA,EAAMyR,YAAYtB,YAAlB,OAA8B5d,QAA9B,IAA8BA,KAAY,MDkB1DuiB,GAElBrV,EAAWC,cACXM,EAAQC,aAAgD,SAACD,GAAD,OAAWA,EAAME,gBAEzEA,EAAe3N,GAAO,UAAGyN,EAAMzN,UAAT,QAA0B,GAGhDme,ECJD,WACL,IAAMjR,EAAWC,cAEjB,OAAO/I,uBACL,SAACkB,EAAuByL,GACtB7D,EAASiR,GAAS,CAAE7Y,UAASyL,WAE/B,CAAC7D,IDHcsV,GAqDjB,OAnDA9e,qBAAU,WACR,GAAK1D,GAAYuD,GAAa+e,EAA9B,CAIA,IAAMrnB,EAAW,IAAIgD,SAAOC,UAAUC,aAAaoF,GAEnDjF,OAAOqW,KAAKhH,GACT0D,QAAO,SAAC9D,GAAD,OA1CP,SACL+U,EACAzU,GAEA,GAAIA,EAAGmC,QAAS,OAAO,EACvB,IAAKnC,EAAGgQ,uBAAwB,OAAO,EACvC,IAAM4E,EAAmBH,EAAkBzU,EAAGgQ,uBAC9C,GAAI4E,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAI5U,MAAOC,UAAYF,EAAGG,WAAa,IAAO,GACtE,OAAI0U,EAAiB,GAEZD,EAAmB,IACjBC,EAAiB,IAEnBD,EAAmB,EA4BNE,CAAYL,EAAiB3U,EAAaJ,OAC3DsR,SAAQ,SAACtR,GACRtS,EACG2nB,sBAAsBrV,GACtBoU,MAAK,SAAC3R,GACS,IAAD,EAATA,GACF9C,EACEH,GAAoB,CAClB/M,UACAuN,OACAyC,QAAS,CACP6S,UAAW7S,EAAQ6S,UACnBjF,YAAa5N,EAAQ4N,YACrBkF,gBAAiB9S,EAAQ8S,gBACzB1hB,KAAM4O,EAAQ5O,KACd6O,OAAQD,EAAQC,OAChBpH,GAAImH,EAAQnH,GACZka,gBAAiB/S,EAAQ+S,gBACzBC,iBAAkBhT,EAAQgT,qBAKhC7E,EACE,CACE8E,IAAK,CACH1V,OACAqC,QAA2B,GAAlBI,EAAQC,OACjB5C,QAAO,UAAEM,EAAaJ,UAAf,aAAE,EAAoBF,UAGjCE,IAGFL,EAASF,GAAmB,CAAEhN,UAASuN,OAAMqQ,YAAa0E,QAG7D3d,OAAM,SAAChE,GACNnB,QAAQmB,MAAR,4CAAmD4M,GAAQ5M,YAGlE,CAACX,EAASuD,EAAUoK,EAAc2U,EAAiBpV,EAAUiR,IAEzD,KEzFT,IAOe+E,GAPE,kBACf,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,UCgBWC,GAlBqB,WAAO,IAAD,EACV3f,mBAASrC,YAAUC,KAAK,IADd,mBACjC/E,EADiC,KACxBiN,EADwB,KAEhC5N,EAAY4H,cAAZ5H,QACFyH,EAAYY,IAEZwF,EAAenF,sBAAW,sBAAC,sBAAAC,EAAA,kEAC/BiF,EAD+B,SACdnG,EAAUigB,6BADI,6EAE9B,CAAC1nB,EAASyH,IAQb,OANAO,qBAAU,WACJhI,GAAWyH,GACboG,IAAe5E,OAAM,SAACC,GAAD,OAASpF,QAAQmB,MAAMiE,EAAI1D,YAEjD,CAACxF,EAAS4N,EAAYnG,IAElB9G,GCJMgnB,GAZiB,WAC9B,IAAMlgB,EAAYY,IACZ6I,EAAiBK,KAOvB,MAAO,CAAEmG,SALYhP,sBAAW,sBAAC,4BAAAC,EAAA,sEACdlB,EAAUmgB,2BADI,OACzBzV,EADyB,OAE/BjB,EAAeiB,EAAI,CAAER,QAAS,+BAFC,2CAG9B,CAAClK,EAAWyJ,M,olBCEjB,IAwBMyG,GAAmBrO,IAAOC,IAAV,MAKhBqO,GAAoBtO,IAAOC,IAAV,MAGP,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MASzCgN,IALevO,IAAOC,IAAV,MACN,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGXvB,IAAOC,IAAV,OAQbuO,GAjDW,SAAC,GAAQ,oBACzBJ,EAAaiQ,KAAbjQ,SACFsE,EAAgByL,KAEtB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAajoB,OAAO,SAEtB,kBAAC,GAAD,CAAO4I,MAAO4T,EAAc6L,GAAG,GAAK,MAAQ,MAC5C,kBAAC,GAAD,CAAO3a,KAAK,uBAEd,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQhD,QAASwN,EAAUxK,KAAK,eAAeT,SAAUuP,EAAc8L,GAAG,UCsBvE5M,GAlCmC,SAAC,GAAmD,IAAjDH,EAAgD,EAAhDA,IAAKI,EAA2C,EAA3CA,UAAW/R,EAAgC,EAAhCA,UAAgC,IAArB4O,iBAAqB,MAAT,GAAS,IAC7ElQ,mBAAS,IADoE,mBAC5FsT,EAD4F,KACvFC,EADuF,KAG7FC,EAAc7N,mBAAQ,WAC1B,OAAOa,GAAsByM,EAAmB,SAAd/C,EAAuB,EAAI,MAC5D,CAAC+C,IAEEQ,EAAe7S,uBAAY,SAAC8S,GAChCH,EAAOG,EAAEC,cAAcrT,SACtB,CAACiT,IAEEK,EAAkBhT,uBAAY,WAClC2S,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnO,KAAI,kBAAa8K,KAC7B,kBAAC,GAAD,CACE5P,MAAOgT,EACPJ,YAAaU,EACbnB,SAAUgB,EACVR,IAAKO,EACL9b,OAAQwY,IAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ9K,KAAK,SAASE,QAAQ,YAAYlD,QAASd,IACnD,kBAAC,GAAD,CAAQ8D,KAAK,UAAUhD,QAAS,kBAAMiR,EAAUC,SCMzCO,GAjCqC,SAAC,GAAmD,IAAjDR,EAAgD,EAAhDA,UAAW/R,EAAqC,EAArCA,UAAW2R,EAA0B,EAA1BA,IAA0B,IAArB/C,iBAAqB,MAAT,GAAS,IAC/ElQ,mBAAS,IADsE,mBAC9FsT,EAD8F,KACzFC,EADyF,KAG/FC,EAAc7N,mBAAQ,WAC1B,OAAOa,GAAsByM,KAC5B,CAACA,IAEEQ,EAAe7S,uBAAY,SAAC8S,GAChCH,EAAOG,EAAEC,cAAcrT,SACtB,CAACiT,IAEEK,EAAkBhT,uBAAY,WAClC2S,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnO,KAAI,mBAAc8K,KAC9B,kBAAC,GAAD,CACEgD,YAAaU,EACbnB,SAAUgB,EACVnT,MAAOgT,EACPL,IAAKO,EACL9b,OAAQwY,IAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQ9K,KAAK,SAASE,QAAQ,YAAYlD,QAASd,IACnD,kBAAC,GAAD,CAAQ8D,KAAK,UAAUhD,QAAS,kBAAMiR,EAAUC,SCxBzC2M,GAda,WAC1B,IAAMtgB,EAAYY,IACZ6I,EAAiBK,KASvB,MAAO,CAAEoI,QAPWjR,sBAAW,uCAC7B,WAAOvI,GAAP,eAAAwI,EAAA,sEACmBlB,EAAUugB,sBAAsBviB,YAAUC,KAAKvF,IADlE,OACQgS,EADR,OAEEjB,EAAeiB,EAAI,CAAER,QAAQ,SAAD,OAAWxR,EAAX,2BAF9B,2CAD6B,sDAK7B,CAACsH,EAAWyJ,MCMD+W,GAfkB,WAC/B,IAAMxgB,EAAYY,IACZ6I,EAAiBK,KAUvB,MAAO,CAAEwI,WATcrR,sBAAW,uCAChC,WAAOvI,GAAP,eAAAwI,EAAA,sEACuBlB,EAAUygB,2BAA2BziB,YAAUC,KAAKvF,IAD3E,OACQ8Z,EADR,OAEE/I,EAAe+I,EAAQ,CACrBtI,QAAQ,YAAD,OAAcxR,EAAd,6BAHX,2CADgC,sDAOhC,CAACsH,EAAWyJ,M,olBCUhB,IAsDMyG,GAAmBrO,IAAOC,IAAV,MAKhBqO,GAAoBtO,IAAOC,IAAV,MAGP,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAIzC+Q,GAAqBtS,IAAOC,IAAV,MACZ,SAACkB,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,QAAQ,MAGpCgN,GAAyBvO,IAAOC,IAAV,MAQbsS,GA/ES,WAAO,IAAD,EACcxT,IAAlClG,EADoB,EACpBA,IAAkB4D,EADE,EACf/D,UAAa+D,UADE,EAEK8S,GAAW1W,EAAK4D,EAAUzG,SAF/B,mBAErBwc,EAFqB,KAENtb,EAFM,KAItBub,EAAepO,GAAgBxL,GAC/B6Z,EAAgByL,KAEd9N,EAAYoO,KAAZpO,QACAI,EAAekO,KAAflO,WARoB,EAUD3N,GACzB,kBAAC,GAAD,CAAc2O,IAAKgB,EAAcZ,UAAWxB,EAAS3B,UAAW,iBAD3DiE,EAVqB,sBAcA7P,GAC1B,kBAAC,GAAD,CAAe2O,IAAKiB,EAAeb,UAAWpB,EAAY/B,UAAW,iBADhEkE,EAdqB,oBAkB5B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAa1c,OAAO,SAEtB,kBAAC,GAAD,CAAO4I,MAAO6F,GAAkB+N,KAChC,kBAAC,GAAD,CAAO9O,KAAK,wBAEd,kBAAC,GAAD,KACG4O,IAAkBzD,GAAcmB,SAC/B,kBAAC,GAAD,CACE/M,SAAUqP,GAAiBzD,GAAciB,QACzCpP,QAAS1J,EACT0M,KAAK,wBAGP,oCACE,kBAAC,GAAD,CAAYhD,QAASgS,GACnB,kBAAC,GAAD,OAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYhS,QAAS+R,GACnB,kBAAC,GAAD,a,ivBCzDlB,IAwCMU,GAAe,WAAO,IAClBhZ,EAAYiE,cAAZjE,QACR,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQuG,QAAS,kBAAMvG,EAAQ,aAAauJ,KAAK,oBAKjDib,GAAkB7e,IAAOC,IAAV,MASfsT,GAAqBvT,IAAOC,IAAV,MAUlBuT,GAAoBxT,IAAOC,IAAV,MASjBmT,GAASpT,IAAOC,IAAV,MAOGxD,GApFa,WAC1BiC,qBAAU,kBAAMgV,OAAOC,SAAS,EAAG,MADH,IAExBjd,EAAY4H,cAAZ5H,QAGR,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACKA,EACD,oCACE,kBAAC,GAAD,CACE6W,KAAM,eACNE,MAAM,qBACND,SAAS,uDAEX,kBAACqR,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,GAAD,CAAQ1c,KAAK,OACb,6BACE,kBAAC,GAAD,CAAQvB,QAAS,aAAUgD,KAAK,uBAElC,kBAAC,GAAD,CAAQzB,KAAK,SAIjB,kBAAC,GAAD,S,waC3CV,IAAM2c,GAAS9e,IAAOC,IAAV,MAUC8e,IALe/e,YAAO8e,GAAP9e,CAAH,MAKCA,IAAOC,IAAV,MAML,gBAAGmK,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,M,kUCX/C,IAAM2U,GAAYhf,YAAOmK,GAAPnK,CAAH,MAIA,SAASif,GAAT,GAQX,IAPF1W,EAOC,EAPDA,KACAqC,EAMC,EANDA,QACAvC,EAKC,EALDA,QAMQrN,EAAYsD,cAAZtD,QACFoG,EAAQpC,qBAAWoD,KAEzB,OACE,kBAAC4c,GAAD,KACE,yBAAKpc,MAAO,CAAEsc,aAAc,KACzBtU,EACC,kBAAC,KAAD,CAAavJ,MAAOD,EAAMC,MAAM0C,KAAK,KAAM5B,KAAM,KAEjD,kBAAC,KAAD,CAAad,MAAM,UAAUc,KAAM,MAGvC,kBAAC4c,GAAD,CAAY3U,IAAI,OACd,kBAAC+U,GAAD,YACG9W,QADH,IACGA,IAAW,SAAWE,EAAK6W,MAAM,EAAG,GAAK,MAAQ7W,EAAK6W,MAAM,GAAI,KAElEpkB,GACC,kBAAC,GAAD,CAAYyG,KAAI,UAAKhJ,EAAOuE,aAAZ,eAA+BuL,IAA/C,uBAOV,IAAM4W,GAAkBnf,IAAOuC,KAAV,MAEV,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,QAGrCJ,GAAalB,IAAOX,EAAV,MACL,SAAA8B,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,KAAK,Q,wqBC1CpC,IAAM+d,GAAcrf,YAAOsf,KAAPtf,CAAH,MASXuf,GAAQvf,IAAOC,IAAV,MAII,qBAAGmB,MAAkBC,MAAMC,KAAK,QAWhDke,GAAQxf,IAAOC,IAAV,MAMW,qBAAGmB,MAAkBC,MAAMC,KAAK,QAGhDme,GAAgBC,aAASF,IAEhB,SAASG,GAAT,GAQX,IAPFnG,EAOC,EAPDA,cACAlZ,EAMC,EANDA,QACAsf,EAKC,EALDA,OAMMxG,EbLD,WACL,IAAMlR,EAAWC,cACjB,OAAO/I,uBACL,SAAC2M,GACC7D,EAASkR,GAAY,CAAErN,WAEzB,CAAC7D,IaDiB2X,GACdC,EAAkB1gB,uBAAY,kBAAMga,EAAYwG,KAAS,CAACA,EAAQxG,IACxE1a,qBAAU,WACR,GAAsB,OAAlB8a,EAAJ,CAEA,IAAM5f,EAAUujB,YAAW,WACzB2C,MACCtG,GAEH,OAAO,WACL4D,aAAaxjB,OAEd,CAAC4f,EAAesG,IAEnB,IAEIC,EAFE3e,EAAQpC,qBAAWoD,KAGzB,GAAI,QAAS9B,EAAS,CAAC,IAAD,EAGhBA,EADF2d,IAAO1V,EAFW,EAEXA,KAAMqC,EAFK,EAELA,QAASvC,EAFJ,EAEIA,QAExB0X,EAAe,kBAACd,GAAD,CAAkB1W,KAAMA,EAAMqC,QAASA,EAASvC,QAASA,IAG1E,IAAM2X,EAAaC,aAAU,CAC3B7jB,KAAM,CAAE6F,MAAO,QACf4B,GAAI,CAAE5B,MAAO,MACbxJ,OAAQ,CAAEynB,SAAQ,OAAE1G,QAAF,IAAEA,SAAiB7Y,KAGvC,OACE,kBAAC4e,GAAD,KACE,kBAACF,GAAD,CAAahe,MAAOD,EAAM+e,MAAOvf,QAASkf,IACzCC,EACkB,OAAlBvG,EAAyB,kBAACiG,GAAD,CAAe7c,MAAOod,IAAiB,M,6wBCjFvE,IAAMI,GAAqBpgB,IAAOC,IAAV,MAGZ,qBAAG0C,UACH,qBAAGA,OAAuB,UAAY,KAC/B,qBAAGA,OAAuB,OAAS,KAQhD0d,GAAmBrgB,IAAOC,IAAV,MAYhBqgB,GAAmBtgB,YAAO+e,GAAP/e,CAAH,MAcP,SAASugB,KAEtB,IAAMC,EdYD,WACL,IAAMC,EAAO/X,aAAY,SAACD,GAAD,OAAqBA,EAAMyR,YAAYb,aAChE,OAAOlV,mBAAQ,kBAAMsc,EAAKpU,QAAO,SAACqU,GAAD,OAAUA,EAAK9G,UAAO,CAAC6G,IcdnCE,GAErB,OACE,oCACE,kBAACL,GAAD,CAAkBlW,IAAI,QACnBoW,EAAa/U,KAAI,SAAAiV,GAAI,OACpB,kBAACf,GAAD,CAAW5T,IAAK2U,EAAK3U,IAAKzL,QAASogB,EAAKpgB,QAASsf,OAAQc,EAAK3U,IAAKyN,cAAekH,EAAKlH,oBAG3F,kBAAC4G,GAAD,CAAoBzd,QAAoB,OAAZ6d,QAAY,IAAZA,OAAA,EAAAA,EAAchV,QAAS,EAAI,cAAgB,GACrE,kBAAC6U,GAAD,KACGG,EACEpB,MAAM,GACNwB,UACAnV,KAAI,SAAAiV,GAAI,OACP,kBAACf,GAAD,CAAW5T,IAAK2U,EAAK3U,IAAKzL,QAASogB,EAAKpgB,QAASsf,OAAQc,EAAK3U,IAAKyN,cAAekH,EAAKlH,sBCzCrG,IAuBMqH,GAAsB,SAAC,GAAkB,IAAhBxiB,EAAe,EAAfA,SAC7B,OACE,kBAAC,IAAD,CAAe+C,MAAOA,IACpB,kBAAC,IAAD,CAAmBpG,QAASvC,EAAOuC,SACjC,kBAAC,IAAD,CAAU+e,MAAOA,IACf,kBAAC,GAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,oCACE,kBAACwG,GAAD,MACCliB,UAWJyiB,GA7CO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzL,KAAK,IAAI3N,OAAK,GACnB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAO2N,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,WCxBQ0L,QACW,cAA7BrN,OAAOsN,SAASC,UAEe,UAA7BvN,OAAOsN,SAASC,UAEhBvN,OAAOsN,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFxF,SAASyF,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdhiB,OAAM,SAAAhE,GACLnB,QAAQmB,MAAMA,EAAMimB,c","file":"static/js/main.36fc6fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/basis-cash-logo.89e29678.svg\";","module.exports = __webpack_public_path__ + \"static/media/basis-share-logo.466cf09b.svg\";","module.exports = __webpack_public_path__ + \"static/media/farmer.0a327c74.png\";","module.exports = __webpack_public_path__ + \"static/media/basis-bond-logo.80fb5592.svg\";","module.exports = __webpack_public_path__ + \"static/media/ycrv.88ae1ab3.png\";","module.exports = __webpack_public_path__ + \"static/media/DAI.17db7fc2.png\";","module.exports = __webpack_public_path__ + \"static/media/sUSD.f8fec857.png\";","module.exports = __webpack_public_path__ + \"static/media/USDC.c76b33ca.png\";","module.exports = __webpack_public_path__ + \"static/media/USDT.839a0f0d.png\";","import { createContext } from 'react';\nimport { Bank } from '../../basis-cash';\n\nexport interface BanksContext {\n  banks: Bank[];\n}\n\nconst context = createContext<BanksContext>({\n  banks: [],\n});\n\nexport default context;\n","import { Deployments } from './deployments';\nimport { ChainId } from '@uniswap/sdk';\n\nexport type Configuration = {\n  chainId: ChainId,\n  etherscanUrl: string,\n  defaultProvider: string,\n  deployments: Deployments,\n  externalTokens: {[contractName: string]: [string, number]};\n  config?: EthereumConfig,\n};\n\nexport type EthereumConfig = {\n  testing: boolean,\n  autoGasMultiplier: number,\n  defaultConfirmations: number,\n  defaultGas: string,\n  defaultGasPrice: string,\n  ethereumNodeTimeout: number,\n};\n\nexport const defaultEthereumConfig = {\n  testing: false,\n  autoGasMultiplier: 1.5,\n  defaultConfirmations: 1,\n  defaultGas: \"6000000\",\n  defaultGasPrice: \"1000000000000\",\n  ethereumNodeTimeout: 10000,\n};\n","import Web3 from 'web3';\nimport { defaultEthereumConfig, EthereumConfig } from './config';\nimport { formatUnits, parseUnits } from 'ethers/lib/utils';\nimport { BigNumber } from 'ethers';\n\nexport function web3ProviderFrom(endpoint: string, config?: EthereumConfig): any {\n  const ethConfig = Object.assign(defaultEthereumConfig, config || {});\n\n  const providerClass = endpoint.includes('wss')\n    ? Web3.providers.WebsocketProvider\n    : Web3.providers.HttpProvider;\n\n  return new providerClass(endpoint, {\n    timeout: ethConfig.ethereumNodeTimeout,\n  });\n}\n\nexport function balanceToDecimal(s: string): string {\n  return formatUnits(s);\n}\n\nexport function decimalToBalance(d: string | number): BigNumber {\n  return parseUnits(String(d));\n}\n","import { BigNumber, Contract } from 'ethers';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { formatUnits } from 'ethers/lib/utils';\n\nclass ERC20 {\n  private contract: Contract;\n\n  address: string;\n  symbol: string;\n  decimal: number;\n\n  constructor(address: string, provider: Signer | Provider, symbol: string, decimal = 18) {\n    this.contract = new Contract(address, ABI, provider);\n    this.address = address;\n    this.symbol = symbol;\n    this.decimal = decimal;\n  }\n\n  connect(signerOrProvider: Signer | Provider) {\n    this.contract = new Contract(this.address, ABI, signerOrProvider);\n  }\n\n  get estimateGas() {\n    return this.contract.estimateGas;\n  }\n\n  totalSupply(): Promise<BigNumber> {\n    return this.contract.totalSupply();\n  }\n\n  balanceOf(account: string): Promise<BigNumber> {\n    return this.contract.balanceOf(account);\n  }\n\n  transfer(recipient: string, amount: BigNumber): Promise<TransactionResponse> {\n    return this.contract.transfer(recipient, amount);\n  }\n\n  allowance(owner: string, spender: string): Promise<BigNumber> {\n    return this.contract.allowance(owner, spender);\n  }\n\n  approve(spender: string, amount: BigNumber): Promise<TransactionResponse> {\n    return this.contract.approve(spender, amount);\n  }\n\n  transferFrom(\n    sender: string,\n    recipient: string,\n    amount: BigNumber,\n  ): Promise<TransactionResponse> {\n    return this.contract.transferFro (sender, recipient, amount);\n  }\n\n  async displayedBalanceOf(account: string): Promise<string> {\n    const balance = await this.balanceOf(account);\n    return formatUnits(balance, this.decimal);\n  }\n\n  async displayedTotalSupply(): Promise<string> {\n    const supply = await this.totalSupply();\n    return Number(formatUnits(supply, this.decimal)).toFixed(0);\n  }}\n\nexport default ERC20;\n\nconst ABI = [\n  {\n    name: 'Approval',\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'owner', type: 'address' },\n      { internalType: 'address', name: 'spender', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { Fetcher, Route, Token } from '@uniswap/sdk';\nimport { Configuration } from './config';\nimport { ContractName, TokenStat } from './types';\nimport { BigNumber, Contract, ethers } from 'ethers';\nimport { decimalToBalance, web3ProviderFrom } from './ether-utils';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport ERC20 from './ERC20';\n\n/**\n * An API module of Basis Cash contracts.\n * All contract-interacting domain logic should be defined in here.\n */\nexport class BasisCash {\n  myAccount: string;\n  provider: ethers.providers.Web3Provider;\n  signer?: ethers.Signer;\n  config: Configuration;\n  contracts: { [name: string]: Contract };\n  externalTokens: { [name: string]: ERC20 };\n\n  BAC: ERC20;\n  BAS: ERC20;\n  BAB: ERC20;\n\n  constructor(cfg: Configuration) {\n    const { defaultProvider, deployments, externalTokens } = cfg;\n    const provider = new ethers.providers.Web3Provider(web3ProviderFrom(defaultProvider));\n\n    // loads contracts from deployments\n    this.contracts = {};\n    for (const [name, deployment] of Object.entries(deployments)) {\n      this.contracts[name] = new Contract(deployment.address, deployment.abi, provider);\n    }\n    this.externalTokens = {};\n    for (const [symbol, [address, decimal]] of Object.entries(externalTokens)) {\n      this.externalTokens[symbol] = new ERC20(address, provider, symbol, decimal); // TODO: add decimal\n    }\n    this.BAC = new ERC20(deployments.Cash.address, provider, 'BAC');\n    this.BAS = new ERC20(deployments.Share.address, provider, 'BAS');\n    this.BAB = new ERC20(deployments.Bond.address, provider, 'BAB');\n\n    this.config = cfg;\n    this.provider = provider;\n  }\n\n  /**\n   * @param provider From an unlocked wallet. (e.g. Metamask)\n   * @param account An address of unlocked wallet account.\n   */\n  unlockWallet(provider: any, account: string) {\n    this.provider = new ethers.providers.Web3Provider(provider);\n    this.signer = this.provider.getSigner(0);\n    this.myAccount = account;\n    for (const [name, contract] of Object.entries(this.contracts)) {\n      this.contracts[name] = contract.connect(this.signer);\n    }\n    const tokens = [this.BAC, this.BAS, this.BAB, ...Object.values(this.externalTokens)];\n    for (const token of tokens) {\n      token.connect(this.signer);\n    }\n    console.log(`🔓 Wallet is unlocked. Welcome, ${account}!`);\n  }\n\n  get isUnlocked(): boolean {\n    return !!this.myAccount;\n  }\n\n  async getCashStat(): Promise<TokenStat> {\n    return {\n      priceInDAI: await this.getTokenPrice(this.BAC),\n      totalSupply: await this.BAC.displayedTotalSupply(),\n    };\n  }\n\n  async getBondStat(): Promise<TokenStat> {\n    const cashPrice = Number(await this.getTokenPrice(this.BAC));\n    return {\n      priceInDAI: (cashPrice ** 2).toPrecision(3),\n      totalSupply: await this.BAB.displayedTotalSupply(),\n    };\n  }\n\n  async getShareStat(): Promise<TokenStat> {\n    return {\n      priceInDAI: await this.getTokenPrice(this.BAS),\n      totalSupply: await this.BAS.displayedTotalSupply(),\n    };\n  }\n\n  async getTokenPrice(tokenContract: ERC20): Promise<string> {\n    const { chainId } = this.config;\n    const { DAI } = this.config.externalTokens;\n\n    const dai = new Token(chainId, DAI[0], 18);\n    const token = new Token(chainId, tokenContract.address, 18);\n\n    try {\n      const daiToToken = await Fetcher.fetchPairData(dai, token, this.provider);\n      const priceInDAI = new Route([daiToToken], token);\n      return priceInDAI.midPrice.toSignificant(3);\n    } catch (err) {\n      console.error(`Failed to fetch token price of ${tokenContract.symbol}: ${err}`);\n    }\n  }\n\n  /**\n   * Buy bonds with cash.\n   * @param amount amount of cash to purchase bonds with.\n   */\n  async buyBonds(amount: string | number): Promise<TransactionResponse> {\n    const { Treasury } = this.contracts;\n    return await Treasury.buyBonds(decimalToBalance(amount));\n  }\n\n  /**\n   * Redeem bonds for cash.\n   * @param amount amount of bonds to redeem.\n   */\n  async redeemBonds(amount: string): Promise<TransactionResponse> {\n    const { Treasury } = this.contracts;\n    return await Treasury.redeemBonds(decimalToBalance(amount));\n  }\n\n  async earnedFromBank(poolName: ContractName, account = this.myAccount): Promise<BigNumber> {\n    const pool = this.contracts[poolName];\n    try {\n      return await pool.earned(account);\n    } catch (err) {\n      console.error(`Failed to call earned() on pool ${pool.address}: ${err.stack}`);\n      return BigNumber.from(0);\n    }\n  }\n\n  async stakedBalanceOnBank(poolName: ContractName, account = this.myAccount): Promise<BigNumber> {\n    const pool = this.contracts[poolName];\n    try {\n      return await pool.balanceOf(account);\n    } catch (err) {\n      console.error(`Failed to call balanceOf() on pool ${pool.address}: ${err.stack}`);\n      return BigNumber.from(0);\n    }\n  }\n\n  /**\n   * Deposits token to given pool.\n   * @param poolName A name of pool contract.\n   * @param amount Number of tokens. (e.g. 1.45 DAI -> '1.45')\n   * @returns {string} Transaction hash\n   */\n  async stake(poolName: ContractName, amount: string | number): Promise<TransactionResponse> {\n    const pool = this.contracts[poolName];\n    return await pool.stake(decimalToBalance(amount));\n  }\n\n  /**\n   * Withdraws token from given pool.\n   * @param poolName A name of pool contract.\n   * @param amount Number of tokens. (e.g. 1.45 DAI -> '1.45')\n   * @returns {string} Transaction hash\n   */\n  async unstake(poolName: ContractName, amount: string | number): Promise<TransactionResponse> {\n    const pool = this.contracts[poolName];\n    return await pool.withdraw(decimalToBalance(amount));\n  }\n\n  /**\n   * Transfers earned token reward from given pool to my account.\n   */\n  async harvest(poolName: ContractName): Promise<TransactionResponse> {\n    const pool = this.contracts[poolName];\n    return await pool.getReward();\n  }\n\n  /**\n   * Harvests and withdraws deposited tokens from the pool.\n   */\n  async exit(poolName: ContractName): Promise<TransactionResponse> {\n    const pool = this.contracts[poolName];\n    return await pool.exit();\n  }\n\n  async stakeShareToBoardroom(amount: BigNumber): Promise<TransactionResponse> {\n    const { Boardroom } = this.contracts;\n    return await Boardroom.stake(amount);\n  }\n\n  async getStakedSharesOnBoardroom(): Promise<BigNumber> {\n    const { Boardroom } = this.contracts;\n    return await Boardroom.getBoardSeatBalance();\n  }\n\n  async withdrawShareFromBoardroom(amount: BigNumber): Promise<TransactionResponse> {\n    const { Boardroom } = this.contracts;\n    return await Boardroom.withdraw(amount);\n  }\n\n  async harvestCashFromBoardroom(): Promise<TransactionResponse> {\n    const { Boardroom } = this.contracts;\n    return await Boardroom.claimDividends();\n  }\n\n  async exitFromBoardroom(): Promise<TransactionResponse> {\n    const { Boardroom } = this.contracts;\n    return await Boardroom.exit();\n  }\n}\n","import { ChainId } from '@uniswap/sdk';\nimport { Configuration } from './basis-cash/config';\nimport { BankInfo } from './basis-cash';\n\nconst configurations: {[env: string]: Configuration} = {\n  development: {\n    chainId: ChainId.ROPSTEN,\n    etherscanUrl: 'https://ropsten.etherscan.io',\n    defaultProvider: 'wss://ropsten.infura.io/ws/v3/d3bcb3c54e8c49a7bd1a9b6773e65bbe',\n    deployments: require('./basis-cash/deployments/deployments.ropsten.json'),\n    externalTokens: {\n      DAI: ['0xc2118d4d90b274016cb7a54c03ef52e6c537d957', 18],\n      YFI: ['0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18],\n      SUSD: ['0x57Ab1E02fEE23774580C119740129eAC7081e9D3', 18],\n      USDC: ['0x0d9c8723b343a8368bebe0b5e89273ff8d712e3c', 6],\n      USDT: ['0x516de3a7a567d81737e3a46ec4ff9cfd1fcb0136', 6],\n      // TODO: replace with real address\n      'BAC_DAI-UNI-LPv2': ['0xdc05b286a75ecbb545a6d3cd2a1c864c76dcbe6a', 18],\n      'BAS_DAI-UNI-LPv2': ['0x76332e3ec7588fbbbd1734c9c8b9a0199a468c67', 18],\n    },\n  },\n  production: {\n    /*chainId: ChainId.MAINNET,\n    etherscanUrl: 'https://etherscan.io',\n    defaultProvider: 'wss://mainnet.infura.io/ws/v3/d3bcb3c54e8c49a7bd1a9b6773e65bbe',\n    deployments: require('./basis-cash/deployments/deployments.local.json'),\n    externalTokens: {\n      DAI: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18],\n      YFI: ['0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18],\n      SUSD: ['0x57Ab1E02fEE23774580C119740129eAC7081e9D3', 18],\n      USDC: ['0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6],\n      USDT: ['0xdAC17F958D2ee523a2206206994597C13D831ec7', 6],\n      // TODO: replace with real address\n      'BAC_DAI-UNI-LPv2': ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18],\n      'BAS_DAI-UNI-LPv2': ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18], */\n      chainId: ChainId.ROPSTEN,\n      etherscanUrl: 'https://ropsten.etherscan.io',\n      defaultProvider: 'wss://ropsten.infura.io/ws/v3/d3bcb3c54e8c49a7bd1a9b6773e65bbe',\n      deployments: require('./basis-cash/deployments/deployments.ropsten.json'),\n      externalTokens: {\n      DAI: ['0xc2118d4d90b274016cb7a54c03ef52e6c537d957', 18],\n      YFI: ['0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18],\n      SUSD: ['0x57Ab1E02fEE23774580C119740129eAC7081e9D3', 18],\n      USDC: ['0x0d9c8723b343a8368bebe0b5e89273ff8d712e3c', 6],\n      USDT: ['0x516de3a7a567d81737e3a46ec4ff9cfd1fcb0136', 6],\n      // TODO: replace with real address\n      'BAC_DAI-UNI-LPv2': ['0xdc05b286a75ecbb545a6d3cd2a1c864c76dcbe6a', 18],\n      'BAS_DAI-UNI-LPv2': ['0x76332e3ec7588fbbbd1734c9c8b9a0199a468c67', 18],\n    },\n  },\n}\n\nexport const bankDefinitions: {[contractName: string]: BankInfo} = {\n  BACDAIPool: {\n    name: 'Earn BAC by DAI',\n    contract: 'BACDAIPool',\n    depositTokenName: 'DAI',\n    earnTokenName: 'BAC',\n    sort: 1,\n  },\n  BACUSDCPool: {\n    name: 'Earn BAC by USDC',\n    contract: 'BACUSDCPool',\n    depositTokenName: 'USDC',\n    earnTokenName: 'BAC',\n    sort: 2,\n  },\n  BACSUSDPool: {\n    name: 'Earn BAC by sUSD',\n    contract: 'BACSUSDPool',\n    depositTokenName: 'SUSD',\n    earnTokenName: 'BAC',\n    sort: 3,\n  },\n  BACUSDTPool: {\n    name: 'Earn BAC by USDT',\n    contract: 'BACUSDTPool',\n    depositTokenName: 'USDT',\n    earnTokenName: 'BAC',\n    sort: 4,\n  },\n  BACyCRVPool: {\n    name: 'Earn BAC by yCRV',\n    contract: 'BACyCRVPool',\n    depositTokenName: 'yCRV',\n    earnTokenName: 'BAC',\n    sort: 5,\n  },\n  DAIBACLPTokenSharePool: {\n    name: 'Earn BAS by BAC-DAI-LP',\n    contract: 'DAIBACLPTokenSharePool',\n    depositTokenName: 'BAC_DAI-UNI-LPv2',\n    earnTokenName: 'BAS',\n    sort: 6,\n  },\n  DAIBASLPTokenSharePool: {\n    name: 'Earn BAS by BAS-DAI-LP',\n    contract: 'DAIBASLPTokenSharePool',\n    depositTokenName: 'BAS_DAI-UNI-LPv2',\n    earnTokenName: 'BAS',\n    sort: 7,\n  },\n};\n\nexport default configurations[process.env.NODE_ENV];\n","import React, { createContext, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport BasisCash from '../../basis-cash';\nimport config from '../../config';\n\nexport interface BasisCashContext {\n  basisCash?: BasisCash;\n}\n\nexport const Context = createContext<BasisCashContext>({ basisCash: null });\n\nexport const BasisCashProvider: React.FC = ({ children }) => {\n  const { ethereum, account } = useWallet();\n  const [basisCash, setBasisCash] = useState<BasisCash>();\n\n  useEffect(() => {\n    if (!basisCash) {\n      const basis = new BasisCash(config);\n      if (account) {\n        // wallet was unlocked at initialization\n        basis.unlockWallet(ethereum, account);\n      }\n      setBasisCash(basis);\n    } else if (account) {\n      basisCash.unlockWallet(ethereum, account);\n    }\n  }, [account]);\n\n  return <Context.Provider value={{ basisCash }}>{children}</Context.Provider>;\n};\n","import { useContext } from 'react';\nimport { Context } from '../contexts/BasisCashProvider';\n\nconst useBasisCash = () => {\n  const { basisCash } = useContext(Context);\n  return basisCash;\n};\n\nexport default useBasisCash;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Context from './context';\nimport useBasisCash from '../../hooks/useBasisCash';\nimport { Bank } from '../../basis-cash';\nimport config, { bankDefinitions } from '../../config';\n\nconst Banks: React.FC = ({ children }) => {\n  const [banks, setBanks] = useState<Bank[]>([]);\n  const basisCash = useBasisCash();\n\n  const fetchPools = useCallback(async () => {\n    const banks: Bank[] = [];\n\n    for (const bankInfo of Object.values(bankDefinitions)) {\n      banks.push({\n        ...bankInfo,\n        address: config.deployments[bankInfo.contract].address,\n        depositToken: basisCash.externalTokens[bankInfo.depositTokenName],\n        earnToken: bankInfo.earnTokenName == 'BAC' ? basisCash.BAC : basisCash.BAS,\n      });\n    }\n    banks.sort((a, b) => (a.sort > b.sort ? 1 : -1));\n    setBanks(banks);\n  }, [basisCash, setBanks]);\n\n  useEffect(() => {\n    if (basisCash) {\n      fetchPools()\n        .catch(err => console.error(`Failed to fetch pools: ${err.stack}`));\n    }\n  }, [basisCash, fetchPools]);\n\n  return <Context.Provider value={{ banks }}>{children}</Context.Provider>;\n};\n\nexport default Banks;\n","import React, { createContext, useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalsContext {\n  content?: React.ReactNode,\n  isOpen?: boolean,\n  onPresent: (content: React.ReactNode) => void,\n  onDismiss: () => void\n}\n\nexport const Context = createContext<ModalsContext>({\n  onPresent: () => {},\n  onDismiss: () => {},\n})\n\nconst Modals: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [content, setContent] = useState<React.ReactNode>()\n\n  const handlePresent = useCallback((modalContent: React.ReactNode) => {\n    setContent(modalContent)\n    setIsOpen(true)\n  }, [setContent, setIsOpen])\n\n  const handleDismiss = useCallback(() => {\n    setContent(undefined)\n    setIsOpen(false)\n  }, [setContent, setIsOpen])\n\n  return (\n    <Context.Provider value={{\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss,\n    }}>\n      {children}\n      {isOpen && (\n        <StyledModalWrapper>\n          <StyledModalBackdrop onClick={handleDismiss} />\n          {React.isValidElement(content) && React.cloneElement(content, {\n            onDismiss: handleDismiss,\n          })}\n        </StyledModalWrapper>\n      )}\n    </Context.Provider>\n  )\n}\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nconst StyledModalBackdrop = styled.div`\n  background-color: #00000088;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nexport default Modals","import React from 'react'\nimport styled from 'styled-components'\n\nconst Nav: React.FC = () => {\n  return (\n    <StyledNav>\n      <StyledLink href=\"https://github.com/Basis-Cash\">GitHub</StyledLink>\n      <StyledLink href=\"https://twitter.com/BasisCash\">Twitter</StyledLink>\n      <StyledLink href=\"https://t.me/basiscash\">Telegram</StyledLink>\n    </StyledNav>\n  )\n}\n\nconst StyledNav = styled.nav`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledLink = styled.a`\n  color: ${props => props.theme.color.grey[400]};\n  padding-left: ${props => props.theme.spacing[3]}px;\n  padding-right: ${props => props.theme.spacing[3]}px;\n  text-decoration: none;\n  &:hover {\n    color: ${props => props.theme.color.grey[500]};\n  }\n`\n\nexport default Nav","import React from 'react'\nimport styled from 'styled-components'\n\nimport Nav from './components/Nav'\n\nconst Footer: React.FC = () => (\n  <StyledFooter>\n    <StyledFooterInner>\n      <Nav />\n    </StyledFooterInner>\n  </StyledFooter>\n)\n\nconst StyledFooter = styled.footer`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`\nconst StyledFooterInner = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: ${props => props.theme.topBarSize}px;\n  max-width: ${props => props.theme.siteWidth}px;\n  width: 100%;\n`\n\nexport default Footer","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface ContainerProps {\n  children?: React.ReactNode,\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, size = 'md' }) => {\n  const { siteWidth } = useContext<{ siteWidth: number }>(ThemeContext)\n  let width: number\n  switch (size) {\n    case 'sm':\n      width = siteWidth / 2\n      break\n    case 'md':\n      width = siteWidth * 2 / 3\n      break\n    case 'lg':\n    default:\n      width = siteWidth\n  }\n  return (\n    <StyledContainer width={width}>\n      {children}\n    </StyledContainer>\n  )\n}\n\ninterface StyledContainerProps {\n  width: number\n}\n\nconst StyledContainer = styled.div<StyledContainerProps>`\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: ${props => props.width}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  width: 100%;\n`\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\n\nimport farmer from '../../assets/img/farmer.png'\n\nconst Logo: React.FC = () => {\n  return (\n    <StyledLogo>\n      <img src={farmer} height=\"32\" style={{ marginTop: -4 }} />\n      <StyledText>Basis Cash</StyledText>\n    </StyledLogo>\n  )\n}\n\nconst StyledLogo = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledText = styled.span`\n  color: ${props => props.theme.color.grey[100]};\n  font-size: 18px;\n  font-weight: 700;\n  margin-left: ${props => props.theme.spacing[2]}px;\n`\n\nexport default Logo","import { useCallback, useContext } from 'react'\n\nimport { Context } from '../contexts/Modals'\n\nconst useModal = (modal: React.ReactNode) => {\n  const { onDismiss, onPresent } = useContext(Context)\n\n  const handlePresent = useCallback(() => {\n    onPresent(modal)\n  }, [\n    modal,\n    onPresent,\n  ])\n\n  return [handlePresent, onDismiss]\n}\n\nexport default useModal","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode,\n  disabled?: boolean,\n  href?: string,\n  onClick?: () => void,\n  size?: 'sm' | 'md' | 'lg',\n  text?: string,\n  to?: string,\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant,\n}) => {\n  const { color, spacing } = useContext(ThemeContext)\n\n  let buttonColor: string\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.teal[200]\n      break\n    case 'default':\n    default:\n      buttonColor = color.primary.main\n  }\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    } else if (href) {\n      return <StyledExternalLink href={href} target=\"__blank\">{text}</StyledExternalLink>\n    } else {\n      return text\n    }\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string,\n  color: string,\n  disabled?: boolean,\n  fontSize: number,\n  padding: number,\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[900]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${props => props.boxShadow};\n  color: ${props => !props.disabled ? props.color : `${props.color}55`};\n  cursor: pointer;\n  display: flex;\n  font-size: ${props => props.fontSize}px;\n  font-weight: 700;\n  height: ${props => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${props => props.padding}px;\n  padding-right: ${props => props.padding}px;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  width: 100%;\n  &:hover {\n    background-color: ${props => props.color};\n    color: ${props => props.theme.color.grey[900]};\n  }\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button","import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport { useWallet } from 'use-wallet';\nimport ERC20 from '../basis-cash/ERC20';\n\nconst useTokenBalance = (token: ERC20) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const { account } = useWallet();\n\n  const fetchBalance = useCallback(async () => {\n    setBalance(await token.balanceOf(account));\n  }, [account, token]);\n\n  useEffect(() => {\n    if (account) {\n      fetchBalance().catch((err) =>\n        console.error(`Failed to fetch token balance: ${err.stack}`),\n      );\n      let refreshInterval = setInterval(fetchBalance, 10000);\n      return () => clearInterval(refreshInterval);\n    }\n  }, [account, setBalance, token]);\n\n  return balance;\n};\n\nexport default useTokenBalance;\n","import { BigNumber } from 'ethers';\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = balance.div(BigNumber.from(10).pow(decimals))\n  return displayBalance.toString()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.div(BigNumber.from(10).pow(decimals)).toString();\n}\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface LabelProps {\n  text?: string;\n  variant?: 'primary' | 'secondary' | 'normal';\n  color?: string;\n}\n\nconst Label: React.FC<LabelProps> = ({ text, variant = 'secondary', color: customColor }) => {\n  const { color } = useContext(ThemeContext);\n\n  let labelColor: string;\n  if (customColor) {\n    labelColor = customColor;\n  } else {\n    if (variant === 'primary') {\n      labelColor = color.primary.main;\n\n    } else if (variant === 'secondary') {\n      labelColor = color.secondary.main;\n\n    } else if (variant === 'normal') {\n      labelColor = color.grey[300];\n    }\n  }\n  return (\n    <StyledLabel color={labelColor}>{text}</StyledLabel>\n  );\n}\n\ninterface StyledLabelProps {\n  color: string;\n}\n\nconst StyledLabel = styled.div<StyledLabelProps>`\n  color: ${props => props.color};\n`\n\nexport default Label","import React from 'react'\nimport styled from 'styled-components'\n\nconst Card: React.FC = ({ children }) => (\n  <StyledCard>\n    {children}\n  </StyledCard>\n)\n\nconst StyledCard = styled.div`\n  background-color: ${props => props.theme.color.grey[800]};\n  border: 1px solid ${props => props.theme.color.grey[900]};\n  border-radius: 12px;\n  box-shadow: inset 1px 1px 0px ${props => props.theme.color.grey[700]};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`\n\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\n\nconst CardContent: React.FC = ({ children }) => (\n  <StyledCardContent>\n    {children}\n  </StyledCardContent>\n)\n\nconst StyledCardContent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: ${props => props.theme.spacing[4]}px;\n`\n\nexport default CardContent","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from '../Card';\nimport CardContent from '../CardContent';\nimport Container from '../Container';\n\nexport interface ModalProps {\n  onDismiss?: () => void;\n}\n\nconst Modal: React.FC = ({ children }) => {\n  return (\n    <Container size=\"sm\">\n      <StyledModal>\n        <Card>\n          <CardContent>{children}</CardContent>\n        </Card>\n      </StyledModal>\n    </Container>\n  );\n};\n\nconst StyledModal = styled.div`\n  border-radius: 12px;\n  box-shadow: 24px 24px 48px -24px ${(props) => props.theme.color.grey[900]};\n  position: relative;\n`;\n\nexport default Modal;\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ModalTitleProps {\n  text?: string\n}\n\nconst ModalTitle: React.FC<ModalTitleProps> = ({ text }) => (\n  <StyledModalTitle>\n    {text}\n  </StyledModalTitle>\n)\n\nconst StyledModalTitle = styled.div`\n  align-items: center;\n  color: ${props => props.theme.color.grey[300]};\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  height: ${props => props.theme.topBarSize}px;\n  justify-content: center;\n  margin-top: ${props => -props.theme.spacing[4]}px;\n`\n\nexport default ModalTitle","import React from 'react';\n\nimport bacLogo from '../../assets/img/basis-cash-logo.svg';\nimport basLogo from '../../assets/img/basis-share-logo.svg';\nimport babLogo from '../../assets/img/basis-bond-logo.svg';\nimport yCRVLogo from '../../assets/img/ycrv.png';\nimport DAILogo from '../../assets/img/DAI.png';\nimport sUSDLogo from '../../assets/img/sUSD.png';\nimport USDCLogo from '../../assets/img/USDC.png';\nimport USDTLogo from '../../assets/img/USDT.png';\n\nconst logosBySymbol: {[title: string]: string} = {\n  'BAC': bacLogo,\n  'BAB': babLogo,\n  'BAS': basLogo,\n  'yCRV': yCRVLogo,\n  'DAI': DAILogo,\n  'SUSD': sUSDLogo,\n  'USDC': USDCLogo,\n  'USDT': USDTLogo,\n  'BAC_DAI-UNI-LPv2': bacLogo,\n  'BAS_DAI-UNI-LPv2': basLogo,\n};\n\ntype BasisLogoProps = {\n  symbol: string;\n  size?: number;\n}\n\nconst TokenSymbol: React.FC<BasisLogoProps> = ({ symbol, size = 64 }) => {\n  if (!logosBySymbol[symbol]) {\n    throw new Error(`Invalid BasisLogo symbol: ${symbol}`);\n  }\n  return (\n    <img\n      src={logosBySymbol[symbol]}\n      alt={`${symbol} Logo`}\n      width={size}\n      height={size}\n    />\n  )\n};\n\nexport default TokenSymbol;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport Button from '../../Button';\nimport Label from '../../Label';\nimport Modal, { ModalProps } from '../../Modal';\nimport ModalTitle from '../../ModalTitle';\nimport useBasisCash from '../../../hooks/useBasisCash';\nimport TokenSymbol from '../../TokenSymbol';\n\nconst AccountModal: React.FC<ModalProps> = ({ onDismiss }) => {\n  const basisCash = useBasisCash();\n\n  const bacBalance = useTokenBalance(basisCash.BAC);\n  const displayBacBalance = useMemo(() => getDisplayBalance(bacBalance), [bacBalance]);\n\n  const basBalance = useTokenBalance(basisCash.BAS);\n  const displayBasBalance = useMemo(() => getDisplayBalance(basBalance), [basBalance]);\n\n  const babBalance = useTokenBalance(basisCash.BAB);\n  const displayBabBalance = useMemo(() => getDisplayBalance(babBalance), [babBalance]);\n\n  return (\n    <Modal>\n      <ModalTitle text=\"My Wallet\" />\n\n      <Balances>\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"BAC\" />\n          <StyledBalance>\n            <StyledValue>{displayBacBalance}</StyledValue>\n            <Label text=\"BAC Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"BAS\" />\n          <StyledBalance>\n            <StyledValue>{displayBasBalance}</StyledValue>\n            <Label text=\"BAS Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"BAB\" />\n          <StyledBalance>\n            <StyledValue>{displayBabBalance}</StyledValue>\n            <Label text=\"BAB Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n      </Balances>\n\n      <StyledSpacer />\n      <Button\n        href=\"\"\n        text=\"More info\"\n      />\n    </Modal>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`\n\nconst StyledValue = styled.div`\n  color: ${props => props.theme.color.grey[300]};\n  font-size: 30px;\n  font-weight: 700;\n`\n\nconst StyledBalance = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Balances = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n`\n\nconst StyledBalanceWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 0 ${props => props.theme.spacing[3]}px;\n`\n\nconst StyledBalanceIcon = styled.div`\n  font-size: 36px;\n  margin-right: ${props => props.theme.spacing[3]}px;\n`\n\nconst StyledBalanceActions = styled.div`\n  align-items: center;\n  display: flex;\n  margin-top: ${props => props.theme.spacing[4]}px;\n`\n\nexport default AccountModal","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { useWallet } from 'use-wallet'\n\nimport useModal from '../../../hooks/useModal'\nimport { formatAddress } from '../../../utils'\n\nimport Button from '../../Button'\n\nimport AccountModal from './AccountModal'\n\ninterface AccountButtonProps {}\n\nconst AccountButton: React.FC<AccountButtonProps> = (props) => {\n  const [onPresentAccountModal] = useModal(<AccountModal />)\n  \n  const { account, connect } = useWallet()\n\n  return (\n    <StyledAccountButton>\n      {!account ? (\n        <Button\n          onClick={() => connect('injected')}\n          size=\"sm\"\n          text=\"Unlock Wallet\"\n        />\n      ) : (\n        <Button\n          onClick={onPresentAccountModal}\n          size=\"sm\"\n          text=\"My Wallet\"\n        />\n      )}\n    </StyledAccountButton>\n  )\n}\n\nconst StyledAccountButton = styled.div``\n\nexport default AccountButton","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst Nav: React.FC = () => {\n  return (\n    <StyledNav>\n      <StyledLink exact activeClassName=\"active\" to=\"/\">Home</StyledLink>\n      <StyledLink exact activeClassName=\"active\" to=\"/bank\">Bank</StyledLink>\n      <StyledLink exact activeClassName=\"active\" to=\"/bonds\">Bonds</StyledLink>\n      <StyledLink exact activeClassName=\"active\" to=\"/boardroom\">Boardroom</StyledLink>\n    </StyledNav>\n  )\n}\n\nconst StyledNav = styled.nav`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledLink = styled(NavLink)`\n  color: ${props => props.theme.color.grey[400]};\n  font-weight: 700;\n  padding-left: ${props => props.theme.spacing[3]}px;\n  padding-right: ${props => props.theme.spacing[3]}px;\n  text-decoration: none;\n  &:hover {\n    color: ${props => props.theme.color.grey[500]};\n  }\n  &.active {\n    color: ${props => props.theme.color.primary.main};\n  }\n`\n\nexport default Nav","import { createAction } from '@reduxjs/toolkit';\nimport { ChainId } from '@uniswap/sdk';\n\nexport interface SerializableTransactionReceipt {\n  to: string;\n  from: string;\n  contractAddress: string;\n  transactionIndex: number;\n  blockHash: string;\n  transactionHash: string;\n  blockNumber: number;\n  status?: number;\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId;\n  hash: string;\n  from: string;\n  approval?: { tokenAddress: string; spender: string };\n  summary?: string;\n}>('transactions/addTransaction');\n\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>(\n  'transactions/clearAllTransactions',\n);\n\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId;\n  hash: string;\n  receipt: SerializableTransactionReceipt;\n}>('transactions/finalizeTransaction');\n\nexport const checkedTransaction = createAction<{\n  chainId: ChainId;\n  hash: string;\n  blockNumber: number;\n}>('transactions/checkedTransaction');\n","import { TransactionResponse } from '@ethersproject/providers';\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWallet } from 'use-wallet';\n\nimport { AppDispatch, AppState } from '../index';\nimport { addTransaction } from './actions';\nimport { TransactionDetails } from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\n) => void {\n  const { chainId, account } = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n      }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const { hash } = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(\n  tokenAddress: string | undefined,\n  spender: string | undefined,\n): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return (\n            approval.spender === spender &&\n            approval.tokenAddress === tokenAddress &&\n            isTransactionRecent(tx)\n          );\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n  }\n`;\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function MiniLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string;\n  stroke?: string;\n}) {\n  return (\n    <StyledSVG\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      size={size}\n      stroke={stroke}\n      {...rest}\n    >\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  );\n}\n","import styled from 'styled-components'\n\nconst Row = styled.div<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align ? align : 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CheckCircle, Triangle } from 'react-feather';\n\nimport MiniLoader from '../../MiniLoader';\nimport { TransactionDetails } from '../../../state/transactions/reducer';\nimport config from '../../../config';\nimport { RowFixed } from '../../Row';\n\nconst TransactionWrapper = styled.div`\n  display: flex;\n  height: 36px;\n`;\n\nconst TransactionStatusText = styled.div`\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst TransactionState = styled.a<{ pending: boolean; success?: boolean }>`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${(props) => props.theme.color.grey[400]};\n`;\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.primary1 : success ? theme.green1 : theme.red1};\n`;\n\ninterface TransactionProps {\n  tx: TransactionDetails;\n}\n\nconst Transaction: React.FC<TransactionProps> = ({ tx }) => {\n  const summary = tx.summary;\n  const pending = !tx.receipt;\n  const success =\n    !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined');\n\n  return (\n    <TransactionWrapper>\n      <TransactionState\n        href={`${config.etherscanUrl}/tx/${tx.hash}`}\n        pending={pending}\n        success={success}\n      >\n        <RowFixed>\n          <TransactionStatusText>{summary ?? tx.hash} ↗</TransactionStatusText>\n        </RowFixed>\n        <IconWrapper pending={pending} success={success}>\n          {pending ? (\n            <MiniLoader />\n          ) : success ? (\n            <CheckCircle size=\"16\" />\n          ) : (\n            <Triangle size=\"16\" />\n          )}\n        </IconWrapper>\n      </TransactionState>\n    </TransactionWrapper>\n  );\n};\n\nexport default Transaction;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>\n            {child}\n          </StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${props => props.theme.spacing[4]}px ${props => -props.theme.spacing[4]}px ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nconst StyledSpacer = styled.div`\n  width: ${props => props.theme.spacing[4]}px;\n`\n\nexport default ModalActions","import React from 'react';\nimport Modal, { ModalProps } from '../../Modal';\nimport ModalTitle from '../../ModalTitle';\nimport TokenSymbol from '../../TokenSymbol';\nimport Label from '../../Label';\nimport Button from '../../Button';\nimport { TransactionDetails } from '../../../state/transactions/reducer';\nimport styled from 'styled-components';\nimport Transaction from './Transaction';\nimport ModalActions from '../../ModalActions';\n\ninterface TxModalProps extends ModalProps {\n  pending: TransactionDetails[];\n  confirmed: TransactionDetails[];\n}\n\n\nconst TxModal: React.FC<TxModalProps> = ({ pending, confirmed, onDismiss }) => {\n  return (\n    <StyledModal>\n      <ModalTitle text=\"Transactions\" />\n      {pending?.length > 0 && (\n        <>\n          <Label text=\"Pending transactions\" />\n          <StyledTransactionList>\n            {pending.map(tx => <Transaction key={tx.hash} tx={tx} />)}\n          </StyledTransactionList>\n        </>\n      )}\n      {confirmed?.length > 0 && (\n        <>\n          <Label text=\"Recent transactions\" />\n          <StyledTransactionList>\n            {confirmed.map(tx => <Transaction key={tx.hash} tx={tx} />)}\n          </StyledTransactionList>\n        </>\n      )}\n      <ModalActions>\n        <Button text=\"Close\" onClick={onDismiss} />\n      </ModalActions>\n    </StyledModal>\n  )\n}\n\nconst StyledModal = styled(Modal)`\n  width: 360px;\n`;\n\nconst StyledTransactionList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default TxModal;","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport Button from '../../Button';\nimport { isTransactionRecent, useAllTransactions } from '../../../state/transactions/hooks';\nimport { TransactionDetails } from '../../../state/transactions/reducer';\nimport useModal from '../../../hooks/useModal';\nimport TxModal from './TxModal';\n\ninterface TxButtonProps {}\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime;\n}\n\nconst TxButton: React.FC<TxButtonProps> = () => {\n  const { account } = useWallet();\n  const allTransactions = useAllTransactions();\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt);\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt);\n\n  const [onPresentTransactionModal] = useModal(\n    <TxModal pending={pending} confirmed={confirmed} />\n  );\n  return (\n    <>\n      {!!account && (\n        <StyledTxButton>\n          <Button\n            size=\"sm\"\n            text={pending.length > 0 ? `${pending.length} Transaction(s)`: `Transactions`}\n            variant={pending.length > 0 ? 'secondary' : 'default'}\n            onClick={() => onPresentTransactionModal()}\n          />\n        </StyledTxButton>\n      )}\n    </>\n  );\n};\n\nconst StyledTxButton = styled.div`\n  margin-right: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default TxButton;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Container from '../Container'\nimport Logo from '../Logo'\n\nimport AccountButton from './components/AccountButton'\nimport Nav from './components/Nav'\nimport TxButton from './components/TxButton'\n\nconst TopBar: React.FC = () => {\n  return (\n    <StyledTopBar>\n      <Container size=\"lg\">\n        <StyledTopBarInner>\n          <div style={{ flex: 1 }}>\n            <Logo />\n          </div>\n          <Nav />\n          <div style={{\n            flex: 1,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}>\n            <TxButton />\n            <AccountButton />\n          </div>\n        </StyledTopBarInner>\n      </Container>\n    </StyledTopBar>\n  )\n}\n\nconst StyledTopBar = styled.div``\n\nconst StyledTopBarInner = styled.div`\n  align-items: center;\n  display: flex;\n  height: ${props => props.theme.topBarSize}px;\n  justify-content: space-between;\n  max-width: ${props => props.theme.siteWidth}px;\n  width: 100%;\n`\n\nexport default TopBar","import React from 'react'\nimport styled from 'styled-components'\n\nimport Footer from '../Footer'\nimport TopBar from '../TopBar'\n\nconst Page: React.FC = ({ children }) => (\n  <StyledPage>\n    <TopBar />\n    <StyledMain>\n      {children}\n    </StyledMain>\n    <Footer />\n  </StyledPage>\n)\n\nconst StyledPage = styled.div``\n\nconst StyledMain = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - ${props => props.theme.topBarSize * 2}px);\n  padding-bottom: ${props => props.theme.spacing[5]}px;\n`\n\nexport default Page","import React from 'react'\nimport styled from 'styled-components'\n\ninterface PageHeaderProps {\n  icon: React.ReactNode,\n  subtitle?: string,\n  title?: string,\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\n  return (\n    <StyledPageHeader>\n      <StyledIcon>{icon}</StyledIcon>\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  )\n}\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${props => props.theme.spacing[6]}px;\n  padding-top: ${props => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`\n\nconst StyledIcon = styled.div`\n  font-size: 96px;\n  height: 96px;\n  line-height: 96px;\n  text-align: center;\n  width: 96px;\n`\n\nconst StyledTitle = styled.h1`\n  color: ${props => props.theme.color.grey[100]};\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`\n\nconst StyledSubtitle = styled.h3`\n  color: ${props => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`\n\nexport default PageHeader","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n  \n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n  \n  return (\n    <StyledSpacer size={s} />\n  )\n}\n\ninterface StyledSpacerProps {\n  size: number,\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`\n\nexport default Spacer","import React from 'react'\nimport styled from 'styled-components'\n\ninterface CardIconProps {\n  children?: React.ReactNode,\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({ children }) => (\n  <StyledCardIcon>\n    {children}\n  </StyledCardIcon>\n)\n\nconst StyledCardIcon = styled.div`\n  background-color: ${props => props.theme.color.white};\n  font-size: 36px;\n  height: 80px;\n  width: 80px;\n  border-radius: 40px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  box-shadow: inset 4px 4px 8px ${props => props.theme.color.grey[300]},\n    inset -6px -6px 12px ${props => props.theme.color.grey[100]};\n  margin: 0 auto ${props => props.theme.spacing[3]}px;\n`\n\nexport default CardIcon","import React from 'react'\n\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string,\n}\n\nconst Value: React.FC<ValueProps> = ({ value }) => {\n  return (\n    <StyledValue>{value}</StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${props => props.theme.color.grey[200]};\n  font-size: 36px;\n  font-weight: 700;\n`\n\nexport default Value","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport useBasisCash from './useBasisCash';\nimport { ContractName } from '../basis-cash';\n\nconst useEarnings = (poolName: ContractName) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const { account } = useWallet();\n  const basisCash = useBasisCash();\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await basisCash.earnedFromBank(poolName, account);\n    setBalance(balance);\n  }, [account, poolName]);\n\n  useEffect(() => {\n    if (account && poolName && basisCash) {\n      fetchBalance().catch((err) => console.error(err.stack));\n    }\n  }, [account, poolName, setBalance, basisCash]);\n\n  return balance;\n};\n\nexport default useEarnings;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { Bank } from '../basis-cash';\n\nconst useHarvest = (bank: Bank) => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n\n  const handleReward = useCallback(async () => {\n    const tx = await basisCash.exit(bank.contract);\n    addTransaction(tx, { summary: `Harvest ${bank.earnTokenName} from ${bank.contract}` });\n  }, [bank, basisCash, addTransaction]);\n\n  return { onReward: handleReward };\n};\n\nexport default useHarvest;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Contract } from 'ethers';\n\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useEarnings from '../../../hooks/useEarnings';\nimport useHarvest from '../../../hooks/useHarvest';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { Bank } from '../../../basis-cash';\n\ninterface HarvestProps {\n  bank: Bank;\n}\n\nconst Harvest: React.FC<HarvestProps> = ({ bank }) => {\n  const earnings = useEarnings(bank.contract);\n  const { onReward } = useHarvest(bank);\n\n  const tokenName = bank.earnTokenName === 'BAS' ? 'Share' : 'Cash';\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.earnToken.symbol} />\n            </CardIcon>\n            <Value value={getDisplayBalance(earnings)} />\n            <Label text={`Basis ${tokenName} Earned`} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button onClick={onReward} text=\"Settle\"  />\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface IconProps {\n  color?: string,\n  children?: string\n}\n\nconst Icon: React.FC = ({ children }) => (\n  <StyledIcon>\n    {children}\n  </StyledIcon>\n)\n\nconst StyledIcon = styled.div`\n`\n\nexport default Icon","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nimport Icon, { IconProps } from '../Icon'\n\nconst AddIcon: React.FC<IconProps> = ({ color }) => {\n  const { color: themeColor } = useContext(ThemeContext)\n  return (\n    <Icon>\n      <svg\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <path\n          d=\"M0 0h24v24H0z\"\n          fill=\"none\"\n        />\n        <path\n          d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n          fill={color ? color : themeColor.grey[400]}\n        />\n      </svg>\n    </Icon>\n  )\n}\n\nexport default AddIcon","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nimport Icon, { IconProps } from '../Icon'\n\nconst RemoveIcon: React.FC<IconProps> = ({ color }) => {\n  const { color: themeColor } = useContext(ThemeContext)\n  return (\n    <Icon>\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill={color ? color : themeColor.grey[400]}\n        width=\"18px\"\n        height=\"18px\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M19 13H5v-2h14v2z\"/>\n      </svg>\n\n    </Icon>\n  )\n}\n\nexport default RemoveIcon","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface IconButtonProps {\n  children?: React.ReactNode,\n  disabled?: boolean,\n  onClick?: () => void,\n  to?: string\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({ children, disabled, onClick, to }) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? (\n        <StyledLink to={to}>{children}</StyledLink>\n      ) : children}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  disabled?: boolean\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[700]};\n  border: 0;\n  border-radius: 28px;\n  color: ${props => !props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500]};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  text-transform: uppercase;\n  width: 56px;\n  &:hover {\n    background-color: ${props => props.theme.color.grey[800]};\n  }\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default IconButton","import { ethers } from 'ethers';\nimport { useCallback, useMemo } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../basis-cash/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const currentAllowance = useAllowance(token, spender);\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { provider } from 'web3-core';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../basis-cash/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string) => {\n  const [allowance, setAllowance] = useState(BigNumber.from(0));\n  const { account }: { account: string; ethereum: provider } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.log(`Failed to fetch allowance: ${err.stack}`));\n    }\n    let refreshInterval = setInterval(fetchAllowance, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [account, spender, token]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { Bank} from '../basis-cash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\n\nconst useStake = (bank: Bank) => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const tx = await basisCash.stake(bank.contract, amount);\n      addTransaction(tx, {\n        summary: `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\n      });\n    },\n    [bank, basisCash, addTransaction],\n  );\n  return { onStake: handleStake };\n};\n\nexport default useStake;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport useBasisCash from './useBasisCash';\nimport { ContractName } from '../basis-cash';\n\nconst useStakedBalance = (poolName: ContractName) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const { account } = useWallet();\n  const basisCash = useBasisCash();\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await basisCash.stakedBalanceOnBank(poolName, account);\n    setBalance(balance);\n  }, [account, poolName]);\n\n  useEffect(() => {\n    if (account && poolName && basisCash) {\n      fetchBalance()\n        .catch(err => console.error(err.stack));\n    }\n  }, [account, poolName, setBalance, basisCash]);\n\n  return balance;\n};\n\nexport default useStakedBalance;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { Bank } from '../basis-cash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\n\nconst useWithdraw = (bank: Bank) => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n  const handleWithdraw = useCallback(\n    async (amount: string) => {\n      const result = await basisCash.unstake(bank.contract, amount);\n      addTransaction(result, {\n        summary: `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\n      });\n    },\n    [bank, basisCash, addTransaction],\n  );\n  return { onWithdraw: handleWithdraw };\n};\n\nexport default useWithdraw;\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode,\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void,\n  placeholder?: string,\n  startAdornment?: React.ReactNode,\n  value: string,\n}\n\nconst Input: React.FC<InputProps> = ({\n  endAdornment,\n  onChange,\n  placeholder,\n  startAdornment,\n  value,\n}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[200]};\n  border-radius: ${props => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${props => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from '../Button'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string,\n  symbol: string,\n  onSelectMax?: () => void,\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>{max.toLocaleString()} {symbol} Available</StyledMaxText>\n      <Input\n        endAdornment={(\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" text=\"Max\" onClick={onSelectMax} />\n            </div>\n          </StyledTokenAdornmentWrapper>\n        )}\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div`\n\n`\n\nconst StyledSpacer = styled.div`\n  width: ${props => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${props => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${props => props.theme.color.grey[600]};\n  font-weight: 700;\n`\n\nexport default TokenInput","import React, { useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport TokenInput from '../../../components/TokenInput'\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport { BigNumber } from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber,\n  decimals: number,\n  onConfirm: (amount: string) => void,\n  tokenName?: string,\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, decimals, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals)\n  }, [max])\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\n\nexport default DepositModal","import React, { useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport TokenInput from '../../../components/TokenInput'\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport { BigNumber } from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber,\n  onConfirm: (amount: string) => void,\n  tokenName?: string,\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdraw from '../../../hooks/useWithdraw';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { Bank } from '../../../basis-cash';\n\ninterface StakeProps {\n  bank: Bank;\n}\n\nconst Stake: React.FC<StakeProps> = ({ bank }) => {\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\n\n  // TODO: reactive update of token balance\n  const tokenBalance = useTokenBalance(bank.depositToken);\n  const stakedBalance = useStakedBalance(bank.contract);\n\n  const { onStake } = useStake(bank);\n  const { onWithdraw } = useWithdraw(bank);\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      decimals={bank.depositToken.decimal}\n      onConfirm={onStake}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onWithdraw}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.depositToken.symbol} size={54} />\n            </CardIcon>\n            <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\n            <Label text={`${bank.depositTokenName} Staked`} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED ? (\n              <Button\n                disabled={approveStatus == ApprovalState.PENDING}\n                onClick={approve}\n                text={`Approve ${bank.depositTokenName}`}\n              />\n            ) : (\n              <>\n                <IconButton onClick={onPresentWithdraw}>\n                  <RemoveIcon />\n                </IconButton>\n                <StyledActionSpacer />\n                {bank.depositTokenName !== 'YCRV_YAM_UNI_LP' && (\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon />\n                  </IconButton>\n                )}\n              </>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import { useContext } from 'react';\nimport { Context as BanksContext } from '../contexts/Banks';\nimport { Bank, ContractName } from '../basis-cash';\n\nconst useBank = (contractName: ContractName): Bank => {\n  const { banks } = useContext(BanksContext);\n  return banks.find((bank) => bank.contract === contractName);\n};\n\nexport default useBank;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { Bank } from '../basis-cash';\n\nconst useRedeem = (bank: Bank) => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n\n  const handleRedeem = useCallback(async () => {\n    const tx = await basisCash.exit(bank.contract);\n    addTransaction(tx, { summary: `Redeem ${bank.contract}` });\n  }, [bank, basisCash, addTransaction]);\n\n  return { onRedeem: handleRedeem };\n};\n\nexport default useRedeem;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\n\nimport Button from '../../components/Button';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\n\nimport useBank from '../../hooks/useBank';\nimport useRedeem from '../../hooks/useRedeem';\n\nconst Bank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n\n  const { bankId } = useParams();\n  const bank = useBank(bankId);\n\n  const { account } = useWallet();\n  const { onRedeem } = useRedeem(bank);\n\n  return account && bank ? (\n    <>\n      <PageHeader\n        icon=\"🏦\"\n        subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n        title={bank?.name}\n      />\n      <StyledBank>\n        <StyledCardsWrapper>\n          <StyledCardWrapper>\n            <Harvest bank={bank} />\n          </StyledCardWrapper>\n          <Spacer />\n          <StyledCardWrapper>\n            <Stake bank={bank} />\n          </StyledCardWrapper>\n        </StyledCardsWrapper>\n        <Spacer size=\"lg\" />\n        {bank.depositTokenName.includes('LP') && (\n          <StyledLink href=\"https://medium.com/@basiscash\">\n            🦄  Provide liquidity to BAS-DAI pair on Uniswap  🦄\n          </StyledLink>\n        )}\n        <Spacer size=\"lg\" />\n        <div>\n          <Button onClick={onRedeem} text=\"Settle & Withdraw\" />\n        </div>\n        <Spacer size=\"lg\" />\n      </StyledBank>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader\n        icon=\"🏚\"\n        title=\"Not Found\"\n        subtitle=\"You've hit a bank just robbed by unicorns.\"\n      />\n    </Center>\n  );\n};\n\nconst UnlockWallet = () => {\n  const { connect } = useWallet();\n  return (\n    <Center>\n      <Button onClick={() => connect('injected')} text=\"Unlock Wallet\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledUniswapLPGuide = styled.div`\n  margin: -24px auto 48px;\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${props => props.theme.color.primary.main};\n`;\n\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Bank;\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport CardIcon from '../CardIcon'\nimport TokenSymbol from '../TokenSymbol';\n\ninterface LoaderProps {\n  text?: string\n}\n\nconst Loader: React.FC<LoaderProps> = ({ text }) => {\n  return (\n    <StyledLoader>\n      <CardIcon>\n        <TokenSymbol symbol=\"BAC\" size={36} />\n      </CardIcon>\n      {!!text && <StyledText>{text}</StyledText>}\n    </StyledLoader>\n  )\n}\n\nconst StyledLoader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledText = styled.div`\n  color: ${props => props.theme.color.grey[400]};\n`\n\nexport default Loader","import { useContext } from 'react';\nimport { Context as BanksContext } from '../contexts/Banks';\n\nconst useBanks = () => {\n  const { banks } = useContext(BanksContext);\n  return [banks];\n};\n\nexport default useBanks;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\nimport styled from 'styled-components';\n\nimport { Bank } from '../../basis-cash';\nimport Button from '../../components/Button';\nimport Card from '../../components/Card';\nimport CardContent from '../../components/CardContent';\nimport CardIcon from '../../components/CardIcon';\nimport Loader from '../../components/Loader';\nimport useBanks from '../../hooks/useBanks';\nimport TokenSymbol from '../../components/TokenSymbol';\n\nconst BankCards: React.FC = () => {\n  const [banks] = useBanks();\n\n  let finishedFirstRow = false;\n  const rows = banks.reduce<Bank[][]>(\n    (bankRows, bank) => {\n      const newBankRows = [...bankRows];\n      if (newBankRows[newBankRows.length - 1].length === (finishedFirstRow ? 2 : 3)) {\n        newBankRows.push([bank]);\n        finishedFirstRow = true;\n      } else {\n        newBankRows[newBankRows.length - 1].push(bank);\n      }\n      return newBankRows;\n    },\n    [[]],\n  );\n\n  return (\n    <StyledCards>\n      {!!rows[0].length ? (\n        rows.map((bankRow, i) => (\n          <StyledRow key={i}>\n            {bankRow.map((bank, j) => (\n              <React.Fragment key={j}>\n                <BankCard bank={bank} />\n                {j < bankRow.length - 1 && <StyledSpacer />}\n              </React.Fragment>\n            ))}\n          </StyledRow>\n        ))\n      ) : (\n        <StyledLoadingWrapper>\n          <Loader text=\"Loading bank\" />\n        </StyledLoadingWrapper>\n      )}\n    </StyledCards>\n  );\n};\n\ninterface BankCardProps {\n  bank: Bank;\n}\n\nconst BankCard: React.FC<BankCardProps> = ({ bank }) => {\n  return (\n    <StyledCardWrapper>\n      {bank.depositTokenName.includes('LP') &&\n        (bank.depositTokenName.includes('BAS_DAI') ? (\n          <StyledCardSuperAccent />\n        ) : (\n          <StyledCardAccent />\n        ))}\n      <Card>\n        <CardContent>\n          <StyledContent>\n            <CardIcon>\n              <TokenSymbol symbol={bank.depositTokenName} size={54} />\n            </CardIcon>\n            <StyledTitle>{bank.name}</StyledTitle>\n            <StyledDetails>\n              <StyledDetail>Deposit {bank.depositTokenName.toUpperCase()}</StyledDetail>\n              <StyledDetail>Earn {`Basis ${bank.earnTokenName}`}</StyledDetail>\n            </StyledDetails>\n            <Button text=\"Select\" to={`/bank/${bank.contract}`} />\n          </StyledContent>\n        </CardContent>\n      </Card>\n    </StyledCardWrapper>\n  );\n};\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  border-radius: 12px;\n  filter: blur(4px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\n\nconst StyledCardSuperAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  border-radius: 12px;\n  filter: blur(8px);\n  position: absolute;\n  top: -4px;\n  right: -4px;\n  bottom: -4px;\n  left: -4px;\n  z-index: -1;\n`;\n\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\n\nconst StyledRow = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${(props) => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`;\n\nconst StyledTitle = styled.h4`\n  color: ${(props) => props.theme.color.grey[200]};\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`;\n\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDetails = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing[6]}px;\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n  text-align: center;\n`;\n\nconst StyledDetail = styled.div`\n  color: ${(props) => props.theme.color.grey[300]};\n`;\n\nexport default BankCards;\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport PageHeader from '../../components/PageHeader';\nimport Bank from '../Bank';\nimport BankCards from './BankCards';\n\nconst Banks: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Page>\n        <Route exact path={path}>\n          <PageHeader\n            icon={'🏦'}\n            title=\"Pick a Bank.\"\n            subtitle=\"Earn Basis Cash / Basis Shares by providing liquidity\"\n          />\n          <BankCards />\n        </Route>\n        <Route path={`${path}/:bankId`}>\n          <Bank />\n        </Route>\n      </Page>\n    </Switch>\n  );\n};\n\nexport default Banks;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport { TokenStat } from '../../../basis-cash/types';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport TokenSymbol from '../../../components/TokenSymbol';\n\ninterface HomeCardProps {\n  title: string;\n  symbol: string;\n  color: string;\n  stat?: TokenStat;\n}\n\nconst HomeCard: React.FC<HomeCardProps> = ({ title, symbol, color, stat }) => {\n  return (\n    <Wrapper>\n      <CardHeader>{title}</CardHeader>\n      <StyledCards>\n        <TokenSymbol symbol={symbol} />\n        <CardSection>\n          {stat ? <StyledValue>${stat.priceInDAI}</StyledValue> : <ValueSkeleton />}\n          <Label text=\"Current Price\" color={color} />\n        </CardSection>\n\n        <CardSection>\n          {stat ? <StyledValue>{stat.totalSupply}</StyledValue> : <ValueSkeleton />}\n          <Label text=\"Total Supply\" color={color} />\n        </CardSection>\n      </StyledCards>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  @media (max-width: 768px) {\n    margin-top: ${(props) => props.theme.spacing[4]}px;\n  }\n`;\n\nconst CardHeader = styled.h2`\n  color: #fff;\n  text-align: center;\n`;\n\nconst StyledCards = styled.div`\n  min-width: 200px;\n  padding: ${(props) => props.theme.spacing[3]}px;\n  color: ${(props) => props.theme.color.white};\n  background-color: ${(props) => props.theme.color.grey[900]};\n  border-radius: 5px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledValue = styled.span`\n  display: inline-block;\n  font-size: 36px;\n  color: #eeeeee;\n`;\n\nconst CardSection = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst ValueSkeletonPadding = styled.div`\n  padding-top: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst ValueSkeleton = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <SkeletonTheme color={theme.color.grey[700]} highlightColor={theme.color.grey[600]}>\n      <ValueSkeletonPadding>\n        <Skeleton height={10} />\n      </ValueSkeletonPadding>\n    </SkeletonTheme>\n  );\n};\n\nconst GuideText = styled.span`\n  color: ${(props) => props.theme.color.primary.main};\n  font-size: 0.8rem;\n`;\n\nconst ValueText = styled.p`\n  color: ${(props) => props.theme.color.white};\n  font-weight: bold;\n  font-size: 1.25rem;\n  margin: ${(props) => props.theme.spacing[1]}px 0;\n`;\n\nexport default HomeCard;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Page from '../../components/Page';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport HomeCard from './components/HomeCard';\nimport { OverviewData } from './types';\nimport useBasisCash from '../../hooks/useBasisCash';\n\nconst Home: React.FC = () => {\n  const basisCash = useBasisCash();\n\n  const [{ cash, bond, share }, setStats] = useState<OverviewData>({});\n  const fetchStats = useCallback(async () => {\n    const [cash, bond, share] = await Promise.all([\n      basisCash.getCashStat(),\n      basisCash.getBondStat(),\n      basisCash.getShareStat(),\n    ]);\n    setStats({ cash, bond, share });\n  }, [basisCash, setStats]);\n\n  useEffect(() => {\n    if (basisCash) {\n      fetchStats()\n        .catch(err => console.error(err.stack));\n    }\n  }, [basisCash]);\n\n  return (\n    <Page>\n      <PageHeader\n        icon=\"👋\"\n        subtitle=\"Buy, sell, and provide liquidity for Basis Cash and Basis Shares on Uniswap\"\n        title=\"Welcome to Basis Cash!\"\n      />\n      <Spacer />\n      <CardWrapper>\n        <HomeCard\n          title={'Basis Cash'}\n          symbol=\"BAC\"\n          color=\"#EEA7ED\"\n          stat={cash}\n        />\n        <Spacer size=\"lg\" />\n        <HomeCard\n          title={'Basis Share'}\n          symbol=\"BAS\"\n          color=\"#E83725\"\n          stat={share}\n        />\n        <Spacer size=\"lg\" />\n        <HomeCard\n          title={'Basis Bonds'}\n          symbol=\"BAB\"\n          color=\"#ECF25C\"\n          stat={bond}\n        />\n      </CardWrapper>\n    </Page>\n  );\n};\n\nconst StyledOverview = styled.div`\n  align-items: center;\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${props => props.theme.color.primary.main};\n`;\n\nexport default Home;","import React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value),\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport useBasisCash from '../../../hooks/useBasisCash';\nimport Label from '../../../components/Label';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../../hooks/useModal';\nimport ExchangeModal from './ExchangeModal';\nimport ERC20 from '../../../basis-cash/ERC20';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\n\ninterface ExchangeCardProps {\n  action: string;\n  fromToken: ERC20;\n  fromTokenName: string;\n  toToken: ERC20;\n  toTokenName: string;\n  priceDesc: string;\n  onExchange: (amount: string) => void;\n  disabled?: boolean;\n}\n\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\n  action,\n  fromToken,\n  fromTokenName,\n  toToken,\n  toTokenName,\n  priceDesc,\n  onExchange,\n  disabled = false,\n}) => {\n  const balance = useTokenBalance(fromToken);\n  const [onPresent, onDismiss] = useModal(\n    <ExchangeModal\n      title={action}\n      description={priceDesc}\n      max={balance}\n      onConfirm={onExchange}\n      action={action}\n      tokenName={fromTokenName}\n    />,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\n          <StyledExchanger>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={fromTokenName} variant=\"normal\" />\n            </StyledToken>\n            <StyledExchangeArrow>\n              <FontAwesomeIcon icon={faArrowRight} />\n            </StyledExchangeArrow>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={toToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={toTokenName} variant=\"normal\" />\n            </StyledToken>\n          </StyledExchanger>\n          <StyledDesc>{priceDesc}</StyledDesc>\n          <StyledCardActions>\n            <Button text={action} onClick={onPresent} disabled={disabled} />\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[300]};\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledExchangeArrow = styled.div`\n  font-size: 20px;\n  color: ${(props) => props.theme.color.grey[300]};\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  width: 100%;\n`;\n\nconst StyledDesc = styled.span`\n  color: ${(props) => props.theme.color.grey[300]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default ExchangeCard;\n","import { useCallback, useEffect, useState } from 'react';\nimport useBasisCash from '../useBasisCash';\nimport { TokenStat } from '../../basis-cash/types';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const basisCash = useBasisCash();\n\n  const fetchBondPrice = useCallback(async () => {\n    setStat(await basisCash.getBondStat());\n  }, [basisCash]);\n\n  useEffect(() => {\n    fetchBondPrice().catch((err) => console.error(`Failed to fetch BAB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchBondPrice, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [setStat, basisCash]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","import React, { useCallback } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\n\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/token/useBondStats';\nimport useBasisCash from '../../hooks/useBasisCash';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\n\nconst Bond: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account, connect } = useWallet();\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await basisCash.buyBonds(amount);\n      const bondAmount = Number(amount) / Number(bondStat.priceInDAI);\n      addTransaction(tx, {\n        summary: `Buy ${bondAmount.toPrecision(3)} BAB with ${amount} BAC`,\n      });\n    },\n    [basisCash, addTransaction, bondStat],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await basisCash.redeemBonds(amount);\n      const bondAmount = Number(amount) * Number(bondStat.priceInDAI);\n      addTransaction(tx, {\n        summary: `Redeem ${bondAmount} BAB`,\n      });\n    },\n    [basisCash, addTransaction, bondStat],\n  );\n\n  return (\n    <Switch>\n      <Page>\n        {!!account ? (\n          <>\n            <Route exact path={path}>\n              <PageHeader\n                icon={'🏦'}\n                title=\"Buy & Redeem Bonds\"\n                subtitle=\"Earn premiums upon redemption\"\n              />\n            </Route>\n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={basisCash.BAC}\n                  fromTokenName=\"Basis Cash\"\n                  toToken={basisCash.BAB}\n                  toTokenName=\"Basis Bond\"\n                  priceDesc={`BAB Price: ${!bondStat ? '-' : '$' + bondStat.priceInDAI}`}\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat}\n                />\n              </StyledCardWrapper>\n              <Spacer size=\"lg\" />\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={basisCash.BAB}\n                  fromTokenName=\"Basis Bond\"\n                  toToken={basisCash.BAC}\n                  toTokenName=\"Basis Cash\"\n                  priceDesc=\"1 BAB = 1 BAC\"\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n          </>\n        ) : (\n          <div\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              flex: 1,\n              justifyContent: 'center',\n            }}\n          >\n            <Button onClick={() => connect('injected')} text=\"Unlock Wallet\" />\n          </div>\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Bond;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions';\n\nconst now = () => new Date().getTime();\n\nexport interface TransactionDetails {\n  hash: string;\n  approval?: { tokenAddress: string; spender: string };\n  summary?: string;\n  receipt?: SerializableTransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  addedTime: number;\n  confirmedTime?: number;\n  from: string;\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails;\n  };\n}\n\nexport const initialState: TransactionState = {};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(\n      addTransaction,\n      (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\n        if (transactions[chainId]?.[hash]) {\n          throw Error('Attempted to add existing transaction.');\n        }\n        const txs = transactions[chainId] ?? {};\n        txs[hash] = { hash, approval, summary, from, addedTime: now() };\n        transactions[chainId] = txs;\n      },\n    )\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return;\n      transactions[chainId] = {};\n    })\n    .addCase(\n      checkedTransaction,\n      (transactions, { payload: { chainId, hash, blockNumber } }) => {\n        const tx = transactions[chainId]?.[hash];\n        if (!tx) {\n          return;\n        }\n        if (!tx.lastCheckedBlockNumber) {\n          tx.lastCheckedBlockNumber = blockNumber;\n        } else {\n          tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n        }\n      },\n    )\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      tx.receipt = receipt;\n      tx.confirmedTime = now();\n    }),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport type PopupContent = {\n  txn: {\n    hash: string;\n    success: boolean;\n    summary?: string;\n  };\n};\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\n  'app/updateBlockNumber',\n);\n\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal');\n\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu');\n\nexport const addPopup = createAction<{\n  key?: string;\n  removeAfterMs?: number | null;\n  content: PopupContent;\n}>('app/addPopup');\n\nexport const removePopup = createAction<{ key: string }>('app/removePopup');\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber,\n} from './actions';\n\ntype PopupList = Array<{\n  key: string;\n  show: boolean;\n  content: PopupContent;\n  removeAfterMs: number | null;\n}>;\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number };\n  popupList: PopupList;\n  walletModalOpen: boolean;\n  settingsMenuOpen: boolean;\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false,\n};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload;\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber;\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n      }\n    })\n    .addCase(toggleWalletModal, (state) => {\n      state.walletModalOpen = !state.walletModalOpen;\n    })\n    .addCase(toggleSettingsMenu, (state) => {\n      state.settingsMenuOpen = !state.settingsMenuOpen;\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key\n        ? state.popupList.filter((popup) => popup.key !== key)\n        : state.popupList\n      ).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ]);\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false;\n        }\n      });\n    }),\n);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { save, load } from 'redux-localstorage-simple';\nimport transactions from './transactions/reducer';\nimport application from './application/reducer';\n\nconst PERSISTED_KEYS: string[] = ['transactions'];\n\nconst store = configureStore({\n  reducer: {\n    application,\n    transactions,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n});\n\nexport default store;\n\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","export const white = '#FFF'\nexport const black = '#000'\n\nexport const green = {\n  500: '#00D110',\n}\n\nexport const purple = {\n  200: '#bd7cfe',\n  400: '#ab47bc',\n  700: '#7b1fa2',\n}\n\nexport const red = {\n  100: '#C1C1FF',\n  200: '#7575FF',\n  500: '#9090FF',\n}\n\nexport const grey = {\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575', \n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n}\n\nexport const bg = '#000000';\n\nexport const teal = {\n  200: '#64ffda'\n}","import { black, purple, teal, grey, red, white } from './colors'\n\nconst theme = {\n  borderRadius: 12,\n  color: {\n    black,\n    grey,\n    primary: {\n      light: red[200],\n      main: red[500],\n    },\n    secondary: {\n      main: teal[200],\n    },\n    white,\n    teal,\n  },\n  siteWidth: 1200,\n  spacing: {\n    1: 4,\n    2: 8,\n    3: 16,\n    4: 24,\n    5: 32,\n    6: 48,\n    7: 64,\n  },\n  topBarSize: 72\n}\n\nexport default theme","import { useCallback, useEffect, useState } from 'react';\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document;\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible());\n  }, [setFocused]);\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n\n    document.addEventListener('visibilitychange', listener);\n    return () => {\n      document.removeEventListener('visibilitychange', listener);\n    };\n  }, [listener]);\n\n  return focused;\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useWallet } from 'use-wallet';\nimport useDebounce from '../../hooks/useDebounce';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport { updateBlockNumber } from './actions';\nimport { ethers } from 'ethers';\n\nexport default function Updater(): null {\n  const { ethereum, chainId } = useWallet();\n\n  const dispatch = useDispatch();\n\n  const windowVisible = useIsWindowVisible();\n\n  const [state, setState] = useState<{\n    chainId: number | undefined;\n    blockNumber: number | null;\n  }>({\n    chainId,\n    blockNumber: null,\n  });\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\n        }\n        return state;\n      });\n    },\n    [chainId, setState],\n  );\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!ethereum || !chainId || !windowVisible) return undefined;\n    setState({ chainId, blockNumber: null });\n\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    provider\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) =>\n        console.error(`Failed to get block number for chainId: ${chainId}`, error),\n      );\n\n    provider.on('block', blockNumberCallback)\n    return () => provider.removeListener('block', blockNumberCallback);\n  }, [dispatch, chainId, ethereum, blockNumberCallback, windowVisible]);\n\n  const debouncedState = useDebounce(state, 100);\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    dispatch(\n      updateBlockNumber({\n        chainId: debouncedState.chainId,\n        blockNumber: debouncedState.blockNumber,\n      }),\n    );\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n\n  return null;\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWallet } from 'use-wallet';\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\nimport { AppDispatch, AppState } from '../index';\nimport { checkedTransaction, finalizeTransaction } from './actions';\nimport { ethers } from 'ethers';\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: {}; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false;\n  if (!tx.lastCheckedBlockNumber) return true;\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) return false;\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  } else {\n    // otherwise every block\n    return true;\n  }\n}\n\nexport default function Updater(): null {\n  const { chainId, ethereum } = useWallet();\n\n  const lastBlockNumber = useBlockNumber();\n\n  const dispatch = useDispatch<AppDispatch>();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  const transactions = chainId ? state[chainId] ?? {} : {};\n\n  // show popup on confirm\n  const addPopup = useAddPopup();\n\n  useEffect(() => {\n    if (!chainId || !ethereum || !lastBlockNumber) {\n      return;\n    }\n\n    const provider = new ethers.providers.Web3Provider(ethereum);\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        provider\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              );\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status == 1,\n                    summary: transactions[hash]?.summary,\n                  },\n                },\n                hash,\n              );\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }));\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error);\n          });\n      });\n  }, [chainId, ethereum, transactions, lastBlockNumber, dispatch, addPopup]);\n\n  return null;\n}\n","import { useCallback, useMemo } from 'react';\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n} from './actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../index';\nimport { useWallet } from 'use-wallet';\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useWallet();\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen);\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch]);\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen);\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch]);\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch();\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }));\n    },\n    [dispatch],\n  );\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }));\n    },\n    [dispatch],\n  );\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList);\n  return useMemo(() => list.filter((item) => item.show), [list]);\n}\n","import React from 'react';\nimport ApplicationUpdater from './application/updater'\nimport TransactionUpdater from './transactions/updater'\n\nconst Updaters = () => (\n  <>\n    <ApplicationUpdater />\n    <TransactionUpdater />\n  </>\n);\n\nexport default Updaters;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport useBasisCash from './useBasisCash';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const { account } = useWallet();\n  const basisCash = useBasisCash();\n\n  const fetchBalance = useCallback(async () => {\n    setBalance(await basisCash.getStakedSharesOnBoardroom());\n  }, [account, basisCash]);\n\n  useEffect(() => {\n    if (account && basisCash) {\n      fetchBalance().catch((err) => console.error(err.stack));\n    }\n  }, [account, setBalance, basisCash]);\n\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\n\nconst useHarvestFromBoardroom = () => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n\n  const handleReward = useCallback(async () => {\n    const tx = await basisCash.harvestCashFromBoardroom();\n    addTransaction(tx, { summary: 'Harvest BAC from Boardroom' });\n  }, [basisCash, addTransaction]);\n\n  return { onReward: handleReward };\n};\n\nexport default useHarvestFromBoardroom;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/Button';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useStakedBalanceOnBoardroom from '../../../hooks/useStakedBalanceOnBoardroom';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\n\nconst Harvest: React.FC = ({}) => {\n  const { onReward } = useHarvestFromBoardroom();\n  const stakedBalance = useStakedBalanceOnBoardroom();\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol=\"BAC\" />\n            </CardIcon>\n            <Value value={stakedBalance.gt(0) ? '> 0' : '0'} />\n            <Label text=\"Basis Cash Earned\" />\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button onClick={onReward} text=\"Claim Reward\" disabled={stakedBalance.eq(0)} />\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import React, { useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport TokenInput from '../../../components/TokenInput'\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport { BigNumber } from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber,\n  onConfirm: (amount: string) => void,\n  tokenName?: string,\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, tokenName === 'USDC' ? 6 : 18)\n  }, [max])\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\n\nexport default DepositModal","import React, { useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal'\nimport ModalActions from '../../../components/ModalActions'\nimport ModalTitle from '../../../components/ModalTitle'\nimport TokenInput from '../../../components/TokenInput'\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport { BigNumber } from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber,\n  onConfirm: (amount: string) => void,\n  tokenName?: string,\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value)\n  }, [setVal])\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { Bank } from '../basis-cash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { BigNumber } from 'ethers';\n\nconst useStakeToBoardroom = () => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const tx = await basisCash.stakeShareToBoardroom(BigNumber.from(amount));\n      addTransaction(tx, { summary: `Stake ${amount} BAS to the boardroom` });\n    },\n    [basisCash, addTransaction],\n  );\n  return { onStake: handleStake };\n};\n\nexport default useStakeToBoardroom;\n","import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { Bank } from '../basis-cash';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { BigNumber } from 'ethers';\n\nconst useWithdrawFromBoardroom = () => {\n  const basisCash = useBasisCash();\n  const addTransaction = useTransactionAdder();\n  const handleWithdraw = useCallback(\n    async (amount: string) => {\n      const result = await basisCash.withdrawShareFromBoardroom(BigNumber.from(amount));\n      addTransaction(result, {\n        summary: `Withdraw ${amount} BAS from the boardroom`,\n      });\n    },\n    [basisCash, addTransaction],\n  );\n  return { onWithdraw: handleWithdraw };\n};\n\nexport default useWithdrawFromBoardroom;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBasisCash from '../../../hooks/useBasisCash';\nimport useStakedBalanceOnBoardroom from '../../../hooks/useStakedBalanceOnBoardroom';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToBoardroom from '../../../hooks/useStakeToBoardroom';\nimport useWithdrawFromBoardroom from '../../../hooks/useWithdrawFromBoardroom';\n\nconst Stake: React.FC = () => {\n  const { BAS, contracts: { Boardroom } } = useBasisCash();\n  const [approveStatus, approve] = useApprove(BAS, Boardroom.address);\n\n  const tokenBalance = useTokenBalance(BAS);\n  const stakedBalance = useStakedBalanceOnBoardroom();\n\n  const { onStake } = useStakeToBoardroom();\n  const { onWithdraw } = useWithdrawFromBoardroom();\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={\"Basis Share\"} />,\n  );\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onWithdraw} tokenName={\"Basis Share\"} />,\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol=\"BAS\" />\n            </CardIcon>\n            <Value value={getDisplayBalance(stakedBalance)} />\n            <Label text=\"Basis Share Staked\" />\n          </StyledCardHeader>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED ? (\n              <Button\n                disabled={approveStatus == ApprovalState.PENDING}\n                onClick={approve}\n                text=\"Approve Basis Share\"\n              />\n            ) : (\n              <>\n                <IconButton onClick={onPresentWithdraw}>\n                  <RemoveIcon />\n                </IconButton>\n                <StyledActionSpacer />\n                <IconButton onClick={onPresentDeposit}>\n                  <AddIcon />\n                </IconButton>\n              </>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\n\nimport Button from '../../components/Button';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { Switch } from 'react-router-dom';\nimport Page from '../../components/Page';\n\nconst Boardroom: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const { account } = useWallet();\n  // TODO: useBoardroom\n\n  return (\n    <Switch>\n      <Page>\n        {!!account ? (\n          <>\n            <PageHeader\n              icon={'🤝'}\n              title=\"Join the Boardroom\"\n              subtitle=\"Deposit Basis Shares and earn inflationary rewards\"\n            />\n            <StyledBoardroom>\n              <StyledCardsWrapper>\n                <StyledCardWrapper>\n                  <Harvest />\n                </StyledCardWrapper>\n                <Spacer />\n                <StyledCardWrapper>\n                  <Stake />\n                </StyledCardWrapper>\n              </StyledCardsWrapper>\n              <Spacer size=\"lg\" />\n              <div>\n                <Button onClick={() => {}} text=\"Settle & Withdraw\" />\n              </div>\n              <Spacer size=\"lg\" />\n            </StyledBoardroom>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst UnlockWallet = () => {\n  const { connect } = useWallet();\n  return (\n    <Center>\n      <Button onClick={() => connect('injected')} text=\"Unlock Wallet\" />\n    </Center>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Boardroom;\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string;\n  success?: boolean;\n  summary?: string;\n}) {\n  const { chainId } = useWallet();\n  const theme = useContext(ThemeContext);\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? (\n          <CheckCircle color={theme.color.teal[200]} size={24} />\n        ) : (\n          <AlertCircle color=\"#FF6871\" size={24} />\n        )}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <StyledPopupDesc>\n          {summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}\n        </StyledPopupDesc>\n        {chainId && (\n          <StyledLink href={`${config.etherscanUrl}/tx/${hash}`}>View on Etherscan</StyledLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  );\n}\n\nconst StyledPopupDesc = styled.span`\n  font-weight: 500;\n  color: ${props => props.theme.color.grey[300]};\n`;\n\nconst StyledLink = styled.a`\n  color: ${props => props.theme.color.grey[500]};\n`;\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport { X } from 'react-feather';\nimport { useSpring } from 'react-spring/web';\nimport styled, { ThemeContext } from 'styled-components';\nimport { animated } from 'react-spring';\nimport { PopupContent } from '../../state/application/actions';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport TransactionPopup from './TransactionPopup';\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.color.grey[700]};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    min-width: 290px;\n  }\n`;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.color.grey[400]};\n`;\n\nconst AnimatedFader = animated(Fader);\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey,\n}: {\n  removeAfterMs: number | null;\n  content: PopupContent;\n  popKey: string;\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n\n  const theme = useContext(ThemeContext);\n\n  let popupContent;\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary },\n    } = content;\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />;\n  }\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined },\n  });\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  );\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useActivePopups } from '../../state/application/hooks'\nimport { AutoColumn } from '../Column'\nimport PopupItem from './PopupItem'\n\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\n  position: relative;\n  max-width: 100%;\n  height: ${({ height }) => height};\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\n\n  display: none;\n  @media (max-width: 768px) {\n    display: block;\n  };\n`\n\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst FixedPopupColumn = styled(AutoColumn)`\n  position: fixed;\n  top: 64px;\n  margin-right: 24px;\n  right: 1rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 2;\n\n  @media (max-width: 768px) {\n    display: none;\n  };\n`\n\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups()\n\n  return (\n    <>\n      <FixedPopupColumn gap=\"20px\">\n        {activePopups.map(item => (\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n        ))}\n      </FixedPopupColumn>\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\n        <MobilePopupInner>\n          {activePopups // reverse so new items up front\n            .slice(0)\n            .reverse()\n            .map(item => (\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n            ))}\n        </MobilePopupInner>\n      </MobilePopupWrapper>\n    </>\n  )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { UseWalletProvider } from 'use-wallet';\n\nimport BanksProvider from './contexts/Banks';\nimport BasisCashProvider from './contexts/BasisCashProvider';\nimport ModalsProvider from './contexts/Modals';\n\nimport Banks from './views/Banks';\nimport Home from './views/Home';\nimport Bond from './views/Bond';\n\nimport store from './state';\nimport theme from './theme';\nimport config from './config';\nimport Updaters from './state/Updaters';\nimport Boardroom from './views/Boardroom';\nimport Popups from './components/Popups';\n\nconst App: React.FC = () => {\n  return (\n    <Providers>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/bank\">\n            <Banks />\n          </Route>\n          <Route path=\"/bonds\">\n            <Bond />\n          </Route>\n          <Route path=\"/boardroom\">\n            <Boardroom />\n          </Route>\n        </Switch>\n      </Router>\n    </Providers>\n  );\n};\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <UseWalletProvider chainId={config.chainId}>\n        <Provider store={store}>\n          <Updaters />\n          <BasisCashProvider>\n            <ModalsProvider>\n              <BanksProvider>\n                <>\n                  <Popups />\n                  {children}\n                </>\n              </BanksProvider>\n            </ModalsProvider>\n          </BasisCashProvider>\n        </Provider>\n      </UseWalletProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}